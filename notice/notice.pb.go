// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notice/notice.proto

package notice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NoticeType int32

const (
	NoticeType_lvse  NoticeType = 0
	NoticeType_daili NoticeType = 1
)

var NoticeType_name = map[int32]string{
	0: "lvse",
	1: "daili",
}

var NoticeType_value = map[string]int32{
	"lvse":  0,
	"daili": 1,
}

func (x NoticeType) String() string {
	return proto.EnumName(NoticeType_name, int32(x))
}

func (NoticeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{0}
}

type NoticeData struct {
	Type                 NoticeType `protobuf:"varint,1,opt,name=type,proto3,enum=NoticeType" json:"type,omitempty"`
	Content              string     `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NoticeData) Reset()         { *m = NoticeData{} }
func (m *NoticeData) String() string { return proto.CompactTextString(m) }
func (*NoticeData) ProtoMessage()    {}
func (*NoticeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{0}
}

func (m *NoticeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoticeData.Unmarshal(m, b)
}
func (m *NoticeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoticeData.Marshal(b, m, deterministic)
}
func (m *NoticeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoticeData.Merge(m, src)
}
func (m *NoticeData) XXX_Size() int {
	return xxx_messageInfo_NoticeData.Size(m)
}
func (m *NoticeData) XXX_DiscardUnknown() {
	xxx_messageInfo_NoticeData.DiscardUnknown(m)
}

var xxx_messageInfo_NoticeData proto.InternalMessageInfo

func (m *NoticeData) GetType() NoticeType {
	if m != nil {
		return m.Type
	}
	return NoticeType_lvse
}

func (m *NoticeData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateNoticeRequest struct {
	Type                 NoticeType `protobuf:"varint,1,opt,name=type,proto3,enum=NoticeType" json:"type,omitempty"`
	Content              string     `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateNoticeRequest) Reset()         { *m = CreateNoticeRequest{} }
func (m *CreateNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNoticeRequest) ProtoMessage()    {}
func (*CreateNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{1}
}

func (m *CreateNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNoticeRequest.Unmarshal(m, b)
}
func (m *CreateNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNoticeRequest.Marshal(b, m, deterministic)
}
func (m *CreateNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNoticeRequest.Merge(m, src)
}
func (m *CreateNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNoticeRequest.Size(m)
}
func (m *CreateNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNoticeRequest proto.InternalMessageInfo

func (m *CreateNoticeRequest) GetType() NoticeType {
	if m != nil {
		return m.Type
	}
	return NoticeType_lvse
}

func (m *CreateNoticeRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type DeleteNoticeRequest struct {
	Type                 NoticeType `protobuf:"varint,1,opt,name=type,proto3,enum=NoticeType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteNoticeRequest) Reset()         { *m = DeleteNoticeRequest{} }
func (m *DeleteNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNoticeRequest) ProtoMessage()    {}
func (*DeleteNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{2}
}

func (m *DeleteNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNoticeRequest.Unmarshal(m, b)
}
func (m *DeleteNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNoticeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNoticeRequest.Merge(m, src)
}
func (m *DeleteNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNoticeRequest.Size(m)
}
func (m *DeleteNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNoticeRequest proto.InternalMessageInfo

func (m *DeleteNoticeRequest) GetType() NoticeType {
	if m != nil {
		return m.Type
	}
	return NoticeType_lvse
}

type UpdateNoticeRequest struct {
	Type                 NoticeType `protobuf:"varint,1,opt,name=type,proto3,enum=NoticeType" json:"type,omitempty"`
	Content              string     `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateNoticeRequest) Reset()         { *m = UpdateNoticeRequest{} }
func (m *UpdateNoticeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNoticeRequest) ProtoMessage()    {}
func (*UpdateNoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{3}
}

func (m *UpdateNoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNoticeRequest.Unmarshal(m, b)
}
func (m *UpdateNoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNoticeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNoticeRequest.Merge(m, src)
}
func (m *UpdateNoticeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNoticeRequest.Size(m)
}
func (m *UpdateNoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNoticeRequest proto.InternalMessageInfo

func (m *UpdateNoticeRequest) GetType() NoticeType {
	if m != nil {
		return m.Type
	}
	return NoticeType_lvse
}

func (m *UpdateNoticeRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type GetNoticeListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNoticeListRequest) Reset()         { *m = GetNoticeListRequest{} }
func (m *GetNoticeListRequest) String() string { return proto.CompactTextString(m) }
func (*GetNoticeListRequest) ProtoMessage()    {}
func (*GetNoticeListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{4}
}

func (m *GetNoticeListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNoticeListRequest.Unmarshal(m, b)
}
func (m *GetNoticeListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNoticeListRequest.Marshal(b, m, deterministic)
}
func (m *GetNoticeListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNoticeListRequest.Merge(m, src)
}
func (m *GetNoticeListRequest) XXX_Size() int {
	return xxx_messageInfo_GetNoticeListRequest.Size(m)
}
func (m *GetNoticeListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNoticeListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNoticeListRequest proto.InternalMessageInfo

type GetNoticeListResponse struct {
	Notices              []*NoticeData `protobuf:"bytes,1,rep,name=notices,proto3" json:"notices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetNoticeListResponse) Reset()         { *m = GetNoticeListResponse{} }
func (m *GetNoticeListResponse) String() string { return proto.CompactTextString(m) }
func (*GetNoticeListResponse) ProtoMessage()    {}
func (*GetNoticeListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4805187b6be1089, []int{5}
}

func (m *GetNoticeListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNoticeListResponse.Unmarshal(m, b)
}
func (m *GetNoticeListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNoticeListResponse.Marshal(b, m, deterministic)
}
func (m *GetNoticeListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNoticeListResponse.Merge(m, src)
}
func (m *GetNoticeListResponse) XXX_Size() int {
	return xxx_messageInfo_GetNoticeListResponse.Size(m)
}
func (m *GetNoticeListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNoticeListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNoticeListResponse proto.InternalMessageInfo

func (m *GetNoticeListResponse) GetNotices() []*NoticeData {
	if m != nil {
		return m.Notices
	}
	return nil
}

func init() {
	proto.RegisterEnum("NoticeType", NoticeType_name, NoticeType_value)
	proto.RegisterType((*NoticeData)(nil), "NoticeData")
	proto.RegisterType((*CreateNoticeRequest)(nil), "CreateNoticeRequest")
	proto.RegisterType((*DeleteNoticeRequest)(nil), "DeleteNoticeRequest")
	proto.RegisterType((*UpdateNoticeRequest)(nil), "UpdateNoticeRequest")
	proto.RegisterType((*GetNoticeListRequest)(nil), "GetNoticeListRequest")
	proto.RegisterType((*GetNoticeListResponse)(nil), "GetNoticeListResponse")
}

func init() { proto.RegisterFile("notice/notice.proto", fileDescriptor_a4805187b6be1089) }

var fileDescriptor_a4805187b6be1089 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xb3, 0xff, 0x7f, 0x6d, 0xed, 0x54, 0xa5, 0x4c, 0xd2, 0x12, 0x7a, 0x31, 0x2e, 0x08,
	0xc1, 0xc3, 0x0a, 0x2d, 0x78, 0x14, 0xc1, 0x42, 0x2f, 0x22, 0x12, 0xf4, 0x03, 0xc4, 0x76, 0x0e,
	0x81, 0x90, 0x5d, 0xbb, 0xa3, 0xd0, 0x8f, 0xec, 0xb7, 0x90, 0x64, 0x8d, 0xc4, 0xb2, 0x17, 0xd1,
	0xd3, 0x32, 0xfb, 0xf6, 0xbd, 0x79, 0xfc, 0x58, 0x08, 0x2b, 0xcd, 0xc5, 0x9a, 0x2e, 0xdd, 0xa1,
	0xcc, 0x56, 0xb3, 0x96, 0x2b, 0x80, 0xfb, 0x66, 0x5e, 0xe6, 0x9c, 0xe3, 0x29, 0xf4, 0x78, 0x67,
	0x28, 0x16, 0x89, 0x48, 0x4f, 0xe6, 0x23, 0xe5, 0xa4, 0xc7, 0x9d, 0xa1, 0xac, 0x11, 0x30, 0x86,
	0xc1, 0x5a, 0x57, 0x4c, 0x15, 0xc7, 0xff, 0x12, 0x91, 0x0e, 0xb3, 0x76, 0x94, 0x0f, 0x10, 0xde,
	0x6e, 0x29, 0x67, 0x72, 0x9e, 0x8c, 0x5e, 0x5e, 0xc9, 0xf2, 0x6f, 0x12, 0xaf, 0x20, 0x5c, 0x52,
	0x49, 0x3f, 0x4d, 0xac, 0x9b, 0x3c, 0x99, 0xcd, 0x5f, 0x36, 0x99, 0x42, 0xb4, 0x22, 0x76, 0x86,
	0xbb, 0xc2, 0xf2, 0x67, 0xa4, 0xbc, 0x86, 0xc9, 0xde, 0xbd, 0x35, 0xba, 0xb2, 0x84, 0xe7, 0x30,
	0x70, 0x94, 0x6d, 0x2c, 0x92, 0xff, 0xe9, 0xe8, 0x6b, 0x5d, 0x4d, 0x39, 0x6b, 0xb5, 0x8b, 0xb3,
	0x16, 0x7e, 0xdd, 0x02, 0x0f, 0xa1, 0x57, 0xbe, 0x59, 0x1a, 0x07, 0x38, 0x84, 0x83, 0x4d, 0x5e,
	0x94, 0xc5, 0x58, 0xcc, 0xdf, 0x05, 0xf4, 0xdd, 0x1b, 0x5c, 0xc0, 0x51, 0x97, 0x30, 0x46, 0xca,
	0x03, 0x7c, 0xd6, 0xdd, 0x24, 0x83, 0xda, 0xd4, 0x85, 0x88, 0x91, 0xf2, 0x30, 0xf5, 0x98, 0xba,
	0x04, 0x31, 0x52, 0x1e, 0xa0, 0xfb, 0xa6, 0x1b, 0x38, 0xfe, 0x06, 0x03, 0x27, 0xca, 0x07, 0x6d,
	0x36, 0x55, 0x5e, 0x66, 0x32, 0x78, 0xee, 0x37, 0x5f, 0x72, 0xf1, 0x11, 0x00, 0x00, 0xff, 0xff,
	0x5a, 0x6f, 0x56, 0xbc, 0xa9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoticeClient is the client API for Notice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoticeClient interface {
	CreateNotice(ctx context.Context, in *CreateNoticeRequest, opts ...grpc.CallOption) (*NoticeData, error)
	DeleteNotice(ctx context.Context, in *DeleteNoticeRequest, opts ...grpc.CallOption) (*NoticeData, error)
	UpdateNotice(ctx context.Context, in *UpdateNoticeRequest, opts ...grpc.CallOption) (*NoticeData, error)
	GetNoticeList(ctx context.Context, in *GetNoticeListRequest, opts ...grpc.CallOption) (*GetNoticeListResponse, error)
}

type noticeClient struct {
	cc *grpc.ClientConn
}

func NewNoticeClient(cc *grpc.ClientConn) NoticeClient {
	return &noticeClient{cc}
}

func (c *noticeClient) CreateNotice(ctx context.Context, in *CreateNoticeRequest, opts ...grpc.CallOption) (*NoticeData, error) {
	out := new(NoticeData)
	err := c.cc.Invoke(ctx, "/Notice/CreateNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noticeClient) DeleteNotice(ctx context.Context, in *DeleteNoticeRequest, opts ...grpc.CallOption) (*NoticeData, error) {
	out := new(NoticeData)
	err := c.cc.Invoke(ctx, "/Notice/DeleteNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noticeClient) UpdateNotice(ctx context.Context, in *UpdateNoticeRequest, opts ...grpc.CallOption) (*NoticeData, error) {
	out := new(NoticeData)
	err := c.cc.Invoke(ctx, "/Notice/UpdateNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noticeClient) GetNoticeList(ctx context.Context, in *GetNoticeListRequest, opts ...grpc.CallOption) (*GetNoticeListResponse, error) {
	out := new(GetNoticeListResponse)
	err := c.cc.Invoke(ctx, "/Notice/GetNoticeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoticeServer is the server API for Notice service.
type NoticeServer interface {
	CreateNotice(context.Context, *CreateNoticeRequest) (*NoticeData, error)
	DeleteNotice(context.Context, *DeleteNoticeRequest) (*NoticeData, error)
	UpdateNotice(context.Context, *UpdateNoticeRequest) (*NoticeData, error)
	GetNoticeList(context.Context, *GetNoticeListRequest) (*GetNoticeListResponse, error)
}

func RegisterNoticeServer(s *grpc.Server, srv NoticeServer) {
	s.RegisterService(&_Notice_serviceDesc, srv)
}

func _Notice_CreateNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNoticeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).CreateNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Notice/CreateNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).CreateNotice(ctx, req.(*CreateNoticeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notice_DeleteNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNoticeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).DeleteNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Notice/DeleteNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).DeleteNotice(ctx, req.(*DeleteNoticeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notice_UpdateNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNoticeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).UpdateNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Notice/UpdateNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).UpdateNotice(ctx, req.(*UpdateNoticeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notice_GetNoticeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNoticeListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).GetNoticeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Notice/GetNoticeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).GetNoticeList(ctx, req.(*GetNoticeListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Notice",
	HandlerType: (*NoticeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNotice",
			Handler:    _Notice_CreateNotice_Handler,
		},
		{
			MethodName: "DeleteNotice",
			Handler:    _Notice_DeleteNotice_Handler,
		},
		{
			MethodName: "UpdateNotice",
			Handler:    _Notice_UpdateNotice_Handler,
		},
		{
			MethodName: "GetNoticeList",
			Handler:    _Notice_GetNoticeList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notice/notice.proto",
}
