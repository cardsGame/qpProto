// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 用户信息
type UserInfo struct {
	UserId                int32            `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	NickName              string           `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	HeadImgUrl            string           `protobuf:"bytes,3,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	AccountType           int32            `protobuf:"varint,4,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Gender                int32            `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Diamond               int32            `protobuf:"varint,6,opt,name=diamond,proto3" json:"diamond,omitempty"`
	Gold                  int32            `protobuf:"varint,7,opt,name=gold,proto3" json:"gold,omitempty"`
	RoomCard              int32            `protobuf:"varint,8,opt,name=roomCard,proto3" json:"roomCard,omitempty"`
	Vip                   int32            `protobuf:"varint,9,opt,name=vip,proto3" json:"vip,omitempty"`
	VipExpc               int32            `protobuf:"varint,10,opt,name=vipExpc,proto3" json:"vipExpc,omitempty"`
	Lvl                   int32            `protobuf:"varint,11,opt,name=lvl,proto3" json:"lvl,omitempty"`
	LvlExpc               int32            `protobuf:"varint,12,opt,name=lvlExpc,proto3" json:"lvlExpc,omitempty"`
	Bag                   map[string]int32 `protobuf:"bytes,13,rep,name=bag,proto3" json:"bag,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RealNameCertification bool             `protobuf:"varint,14,opt,name=realNameCertification,proto3" json:"realNameCertification,omitempty"`
	PhoneCertification    bool             `protobuf:"varint,15,opt,name=phoneCertification,proto3" json:"phoneCertification,omitempty"`
	Phone                 string           `protobuf:"bytes,16,opt,name=phone,proto3" json:"phone,omitempty"`
	IdNo                  string           `protobuf:"bytes,17,opt,name=idNo,proto3" json:"idNo,omitempty"`
	RealName              string           `protobuf:"bytes,18,opt,name=realName,proto3" json:"realName,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{0}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (dst *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(dst, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserInfo) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *UserInfo) GetAccountType() int32 {
	if m != nil {
		return m.AccountType
	}
	return 0
}

func (m *UserInfo) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *UserInfo) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *UserInfo) GetGold() int32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *UserInfo) GetRoomCard() int32 {
	if m != nil {
		return m.RoomCard
	}
	return 0
}

func (m *UserInfo) GetVip() int32 {
	if m != nil {
		return m.Vip
	}
	return 0
}

func (m *UserInfo) GetVipExpc() int32 {
	if m != nil {
		return m.VipExpc
	}
	return 0
}

func (m *UserInfo) GetLvl() int32 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (m *UserInfo) GetLvlExpc() int32 {
	if m != nil {
		return m.LvlExpc
	}
	return 0
}

func (m *UserInfo) GetBag() map[string]int32 {
	if m != nil {
		return m.Bag
	}
	return nil
}

func (m *UserInfo) GetRealNameCertification() bool {
	if m != nil {
		return m.RealNameCertification
	}
	return false
}

func (m *UserInfo) GetPhoneCertification() bool {
	if m != nil {
		return m.PhoneCertification
	}
	return false
}

func (m *UserInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserInfo) GetIdNo() string {
	if m != nil {
		return m.IdNo
	}
	return ""
}

func (m *UserInfo) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

// 本地登录认证请求
type AuthLocalRequest struct {
	AccountName          string   `protobuf:"bytes,1,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	NickName             string   `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	HeadImgUrl           string   `protobuf:"bytes,4,opt,name=headImgUrl,proto3" json:"headImgUrl,omitempty"`
	Gender               int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	IsBot                bool     `protobuf:"varint,6,opt,name=isBot,proto3" json:"isBot,omitempty"`
	InviteUserId         int32    `protobuf:"varint,7,opt,name=inviteUserId,proto3" json:"inviteUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthLocalRequest) Reset()         { *m = AuthLocalRequest{} }
func (m *AuthLocalRequest) String() string { return proto.CompactTextString(m) }
func (*AuthLocalRequest) ProtoMessage()    {}
func (*AuthLocalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{1}
}
func (m *AuthLocalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthLocalRequest.Unmarshal(m, b)
}
func (m *AuthLocalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthLocalRequest.Marshal(b, m, deterministic)
}
func (dst *AuthLocalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthLocalRequest.Merge(dst, src)
}
func (m *AuthLocalRequest) XXX_Size() int {
	return xxx_messageInfo_AuthLocalRequest.Size(m)
}
func (m *AuthLocalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthLocalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthLocalRequest proto.InternalMessageInfo

func (m *AuthLocalRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *AuthLocalRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthLocalRequest) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *AuthLocalRequest) GetHeadImgUrl() string {
	if m != nil {
		return m.HeadImgUrl
	}
	return ""
}

func (m *AuthLocalRequest) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *AuthLocalRequest) GetIsBot() bool {
	if m != nil {
		return m.IsBot
	}
	return false
}

func (m *AuthLocalRequest) GetInviteUserId() int32 {
	if m != nil {
		return m.InviteUserId
	}
	return 0
}

// 微信h5登录认证请求
type AuthWxH5Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthWxH5Request) Reset()         { *m = AuthWxH5Request{} }
func (m *AuthWxH5Request) String() string { return proto.CompactTextString(m) }
func (*AuthWxH5Request) ProtoMessage()    {}
func (*AuthWxH5Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{2}
}
func (m *AuthWxH5Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthWxH5Request.Unmarshal(m, b)
}
func (m *AuthWxH5Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthWxH5Request.Marshal(b, m, deterministic)
}
func (dst *AuthWxH5Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthWxH5Request.Merge(dst, src)
}
func (m *AuthWxH5Request) XXX_Size() int {
	return xxx_messageInfo_AuthWxH5Request.Size(m)
}
func (m *AuthWxH5Request) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthWxH5Request.DiscardUnknown(m)
}

var xxx_messageInfo_AuthWxH5Request proto.InternalMessageInfo

// token信息
type PayloadToken struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ExpireAt             int32    `protobuf:"varint,3,opt,name=expireAt,proto3" json:"expireAt,omitempty"`
	Role                 string   `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	IsNew                bool     `protobuf:"varint,5,opt,name=isNew,proto3" json:"isNew,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayloadToken) Reset()         { *m = PayloadToken{} }
func (m *PayloadToken) String() string { return proto.CompactTextString(m) }
func (*PayloadToken) ProtoMessage()    {}
func (*PayloadToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{3}
}
func (m *PayloadToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayloadToken.Unmarshal(m, b)
}
func (m *PayloadToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayloadToken.Marshal(b, m, deterministic)
}
func (dst *PayloadToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayloadToken.Merge(dst, src)
}
func (m *PayloadToken) XXX_Size() int {
	return xxx_messageInfo_PayloadToken.Size(m)
}
func (m *PayloadToken) XXX_DiscardUnknown() {
	xxx_messageInfo_PayloadToken.DiscardUnknown(m)
}

var xxx_messageInfo_PayloadToken proto.InternalMessageInfo

func (m *PayloadToken) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PayloadToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PayloadToken) GetExpireAt() int32 {
	if m != nil {
		return m.ExpireAt
	}
	return 0
}

func (m *PayloadToken) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *PayloadToken) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

// token验证请求
type SignInGameRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInGameRequest) Reset()         { *m = SignInGameRequest{} }
func (m *SignInGameRequest) String() string { return proto.CompactTextString(m) }
func (*SignInGameRequest) ProtoMessage()    {}
func (*SignInGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{4}
}
func (m *SignInGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInGameRequest.Unmarshal(m, b)
}
func (m *SignInGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInGameRequest.Marshal(b, m, deterministic)
}
func (dst *SignInGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInGameRequest.Merge(dst, src)
}
func (m *SignInGameRequest) XXX_Size() int {
	return xxx_messageInfo_SignInGameRequest.Size(m)
}
func (m *SignInGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignInGameRequest proto.InternalMessageInfo

func (m *SignInGameRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 验证token请求
type VerifyTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTokenRequest) Reset()         { *m = VerifyTokenRequest{} }
func (m *VerifyTokenRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyTokenRequest) ProtoMessage()    {}
func (*VerifyTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{5}
}
func (m *VerifyTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTokenRequest.Unmarshal(m, b)
}
func (m *VerifyTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTokenRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTokenRequest.Merge(dst, src)
}
func (m *VerifyTokenRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyTokenRequest.Size(m)
}
func (m *VerifyTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTokenRequest proto.InternalMessageInfo

func (m *VerifyTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type VerifyTokenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTokenResponse) Reset()         { *m = VerifyTokenResponse{} }
func (m *VerifyTokenResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyTokenResponse) ProtoMessage()    {}
func (*VerifyTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{6}
}
func (m *VerifyTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTokenResponse.Unmarshal(m, b)
}
func (m *VerifyTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTokenResponse.Marshal(b, m, deterministic)
}
func (dst *VerifyTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTokenResponse.Merge(dst, src)
}
func (m *VerifyTokenResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyTokenResponse.Size(m)
}
func (m *VerifyTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTokenResponse proto.InternalMessageInfo

// 获取用户详细信息
type GetDetailInfoRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetailInfoRequest) Reset()         { *m = GetDetailInfoRequest{} }
func (m *GetDetailInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetDetailInfoRequest) ProtoMessage()    {}
func (*GetDetailInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{7}
}
func (m *GetDetailInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailInfoRequest.Unmarshal(m, b)
}
func (m *GetDetailInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetDetailInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailInfoRequest.Merge(dst, src)
}
func (m *GetDetailInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDetailInfoRequest.Size(m)
}
func (m *GetDetailInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailInfoRequest proto.InternalMessageInfo

func (m *GetDetailInfoRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 获取所有用户信息
type GetAllUserRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Q                    string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllUserRequest) Reset()         { *m = GetAllUserRequest{} }
func (m *GetAllUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllUserRequest) ProtoMessage()    {}
func (*GetAllUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{8}
}
func (m *GetAllUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllUserRequest.Unmarshal(m, b)
}
func (m *GetAllUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetAllUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllUserRequest.Merge(dst, src)
}
func (m *GetAllUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllUserRequest.Size(m)
}
func (m *GetAllUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllUserRequest proto.InternalMessageInfo

func (m *GetAllUserRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllUserRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllUserRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

// 获取所有用户信息响应
type GetAllUserResponse struct {
	List                 []*UserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetAllUserResponse) Reset()         { *m = GetAllUserResponse{} }
func (m *GetAllUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllUserResponse) ProtoMessage()    {}
func (*GetAllUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{9}
}
func (m *GetAllUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllUserResponse.Unmarshal(m, b)
}
func (m *GetAllUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllUserResponse.Marshal(b, m, deterministic)
}
func (dst *GetAllUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllUserResponse.Merge(dst, src)
}
func (m *GetAllUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllUserResponse.Size(m)
}
func (m *GetAllUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllUserResponse proto.InternalMessageInfo

func (m *GetAllUserResponse) GetList() []*UserInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 增加物品请求
type AddItemsRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Items                []*Item  `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddItemsRequest) Reset()         { *m = AddItemsRequest{} }
func (m *AddItemsRequest) String() string { return proto.CompactTextString(m) }
func (*AddItemsRequest) ProtoMessage()    {}
func (*AddItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{10}
}
func (m *AddItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddItemsRequest.Unmarshal(m, b)
}
func (m *AddItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddItemsRequest.Marshal(b, m, deterministic)
}
func (dst *AddItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddItemsRequest.Merge(dst, src)
}
func (m *AddItemsRequest) XXX_Size() int {
	return xxx_messageInfo_AddItemsRequest.Size(m)
}
func (m *AddItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddItemsRequest proto.InternalMessageInfo

func (m *AddItemsRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddItemsRequest) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

// 用户更新内容
type UserUpdate struct {
	GetItems             []*Item   `protobuf:"bytes,1,rep,name=getItems,proto3" json:"getItems,omitempty"`
	UserUpdate           *UserInfo `protobuf:"bytes,2,opt,name=userUpdate,proto3" json:"userUpdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserUpdate) Reset()         { *m = UserUpdate{} }
func (m *UserUpdate) String() string { return proto.CompactTextString(m) }
func (*UserUpdate) ProtoMessage()    {}
func (*UserUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{11}
}
func (m *UserUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUpdate.Unmarshal(m, b)
}
func (m *UserUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUpdate.Marshal(b, m, deterministic)
}
func (dst *UserUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUpdate.Merge(dst, src)
}
func (m *UserUpdate) XXX_Size() int {
	return xxx_messageInfo_UserUpdate.Size(m)
}
func (m *UserUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UserUpdate proto.InternalMessageInfo

func (m *UserUpdate) GetGetItems() []*Item {
	if m != nil {
		return m.GetItems
	}
	return nil
}

func (m *UserUpdate) GetUserUpdate() *UserInfo {
	if m != nil {
		return m.UserUpdate
	}
	return nil
}

// 申请实名认证请求
type RealNameCertificationRequest struct {
	IdNo                 string   `protobuf:"bytes,1,opt,name=idNo,proto3" json:"idNo,omitempty"`
	RealName             string   `protobuf:"bytes,2,opt,name=realName,proto3" json:"realName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealNameCertificationRequest) Reset()         { *m = RealNameCertificationRequest{} }
func (m *RealNameCertificationRequest) String() string { return proto.CompactTextString(m) }
func (*RealNameCertificationRequest) ProtoMessage()    {}
func (*RealNameCertificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{12}
}
func (m *RealNameCertificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealNameCertificationRequest.Unmarshal(m, b)
}
func (m *RealNameCertificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealNameCertificationRequest.Marshal(b, m, deterministic)
}
func (dst *RealNameCertificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealNameCertificationRequest.Merge(dst, src)
}
func (m *RealNameCertificationRequest) XXX_Size() int {
	return xxx_messageInfo_RealNameCertificationRequest.Size(m)
}
func (m *RealNameCertificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RealNameCertificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RealNameCertificationRequest proto.InternalMessageInfo

func (m *RealNameCertificationRequest) GetIdNo() string {
	if m != nil {
		return m.IdNo
	}
	return ""
}

func (m *RealNameCertificationRequest) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

// 申请实名认证响应
type RealNameCertificationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealNameCertificationResponse) Reset()         { *m = RealNameCertificationResponse{} }
func (m *RealNameCertificationResponse) String() string { return proto.CompactTextString(m) }
func (*RealNameCertificationResponse) ProtoMessage()    {}
func (*RealNameCertificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{13}
}
func (m *RealNameCertificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealNameCertificationResponse.Unmarshal(m, b)
}
func (m *RealNameCertificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealNameCertificationResponse.Marshal(b, m, deterministic)
}
func (dst *RealNameCertificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealNameCertificationResponse.Merge(dst, src)
}
func (m *RealNameCertificationResponse) XXX_Size() int {
	return xxx_messageInfo_RealNameCertificationResponse.Size(m)
}
func (m *RealNameCertificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RealNameCertificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RealNameCertificationResponse proto.InternalMessageInfo

// 申请手机认证请求
type PhoneCertificationRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhoneCertificationRequest) Reset()         { *m = PhoneCertificationRequest{} }
func (m *PhoneCertificationRequest) String() string { return proto.CompactTextString(m) }
func (*PhoneCertificationRequest) ProtoMessage()    {}
func (*PhoneCertificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{14}
}
func (m *PhoneCertificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneCertificationRequest.Unmarshal(m, b)
}
func (m *PhoneCertificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneCertificationRequest.Marshal(b, m, deterministic)
}
func (dst *PhoneCertificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneCertificationRequest.Merge(dst, src)
}
func (m *PhoneCertificationRequest) XXX_Size() int {
	return xxx_messageInfo_PhoneCertificationRequest.Size(m)
}
func (m *PhoneCertificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneCertificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneCertificationRequest proto.InternalMessageInfo

func (m *PhoneCertificationRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// 申请手机认证响应
type PhoneCertificationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhoneCertificationResponse) Reset()         { *m = PhoneCertificationResponse{} }
func (m *PhoneCertificationResponse) String() string { return proto.CompactTextString(m) }
func (*PhoneCertificationResponse) ProtoMessage()    {}
func (*PhoneCertificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{15}
}
func (m *PhoneCertificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneCertificationResponse.Unmarshal(m, b)
}
func (m *PhoneCertificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneCertificationResponse.Marshal(b, m, deterministic)
}
func (dst *PhoneCertificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneCertificationResponse.Merge(dst, src)
}
func (m *PhoneCertificationResponse) XXX_Size() int {
	return xxx_messageInfo_PhoneCertificationResponse.Size(m)
}
func (m *PhoneCertificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneCertificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneCertificationResponse proto.InternalMessageInfo

// 物品
type Item struct {
	ItemId               int32    `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_c69d51f1fe4ac3a8, []int{16}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (dst *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(dst, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Item) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "UserInfo")
	proto.RegisterMapType((map[string]int32)(nil), "UserInfo.BagEntry")
	proto.RegisterType((*AuthLocalRequest)(nil), "AuthLocalRequest")
	proto.RegisterType((*AuthWxH5Request)(nil), "AuthWxH5Request")
	proto.RegisterType((*PayloadToken)(nil), "PayloadToken")
	proto.RegisterType((*SignInGameRequest)(nil), "SignInGameRequest")
	proto.RegisterType((*VerifyTokenRequest)(nil), "VerifyTokenRequest")
	proto.RegisterType((*VerifyTokenResponse)(nil), "VerifyTokenResponse")
	proto.RegisterType((*GetDetailInfoRequest)(nil), "GetDetailInfoRequest")
	proto.RegisterType((*GetAllUserRequest)(nil), "GetAllUserRequest")
	proto.RegisterType((*GetAllUserResponse)(nil), "GetAllUserResponse")
	proto.RegisterType((*AddItemsRequest)(nil), "AddItemsRequest")
	proto.RegisterType((*UserUpdate)(nil), "UserUpdate")
	proto.RegisterType((*RealNameCertificationRequest)(nil), "RealNameCertificationRequest")
	proto.RegisterType((*RealNameCertificationResponse)(nil), "RealNameCertificationResponse")
	proto.RegisterType((*PhoneCertificationRequest)(nil), "PhoneCertificationRequest")
	proto.RegisterType((*PhoneCertificationResponse)(nil), "PhoneCertificationResponse")
	proto.RegisterType((*Item)(nil), "Item")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserQueryClient is the client API for UserQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserQueryClient interface {
	// 获取某个用户的详细信息
	GetDetailInfo(ctx context.Context, in *GetDetailInfoRequest, opts ...grpc.CallOption) (*UserInfo, error)
	// 获取所有用户
	GetAllUser(ctx context.Context, in *GetAllUserRequest, opts ...grpc.CallOption) (*GetAllUserResponse, error)
}

type userQueryClient struct {
	cc *grpc.ClientConn
}

func NewUserQueryClient(cc *grpc.ClientConn) UserQueryClient {
	return &userQueryClient{cc}
}

func (c *userQueryClient) GetDetailInfo(ctx context.Context, in *GetDetailInfoRequest, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/UserQuery/GetDetailInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userQueryClient) GetAllUser(ctx context.Context, in *GetAllUserRequest, opts ...grpc.CallOption) (*GetAllUserResponse, error) {
	out := new(GetAllUserResponse)
	err := c.cc.Invoke(ctx, "/UserQuery/GetAllUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserQueryServer is the server API for UserQuery service.
type UserQueryServer interface {
	// 获取某个用户的详细信息
	GetDetailInfo(context.Context, *GetDetailInfoRequest) (*UserInfo, error)
	// 获取所有用户
	GetAllUser(context.Context, *GetAllUserRequest) (*GetAllUserResponse, error)
}

func RegisterUserQueryServer(s *grpc.Server, srv UserQueryServer) {
	s.RegisterService(&_UserQuery_serviceDesc, srv)
}

func _UserQuery_GetDetailInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserQueryServer).GetDetailInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserQuery/GetDetailInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserQueryServer).GetDetailInfo(ctx, req.(*GetDetailInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserQuery_GetAllUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserQueryServer).GetAllUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserQuery/GetAllUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserQueryServer).GetAllUser(ctx, req.(*GetAllUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserQuery",
	HandlerType: (*UserQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDetailInfo",
			Handler:    _UserQuery_GetDetailInfo_Handler,
		},
		{
			MethodName: "GetAllUser",
			Handler:    _UserQuery_GetAllUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

// UserBizClient is the client API for UserBiz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserBizClient interface {
	// 给玩家增加物品
	AddItems(ctx context.Context, in *AddItemsRequest, opts ...grpc.CallOption) (*UserUpdate, error)
}

type userBizClient struct {
	cc *grpc.ClientConn
}

func NewUserBizClient(cc *grpc.ClientConn) UserBizClient {
	return &userBizClient{cc}
}

func (c *userBizClient) AddItems(ctx context.Context, in *AddItemsRequest, opts ...grpc.CallOption) (*UserUpdate, error) {
	out := new(UserUpdate)
	err := c.cc.Invoke(ctx, "/UserBiz/AddItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserBizServer is the server API for UserBiz service.
type UserBizServer interface {
	// 给玩家增加物品
	AddItems(context.Context, *AddItemsRequest) (*UserUpdate, error)
}

func RegisterUserBizServer(s *grpc.Server, srv UserBizServer) {
	s.RegisterService(&_UserBiz_serviceDesc, srv)
}

func _UserBiz_AddItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBizServer).AddItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserBiz/AddItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBizServer).AddItems(ctx, req.(*AddItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserBiz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserBiz",
	HandlerType: (*UserBizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddItems",
			Handler:    _UserBiz_AddItems_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

// UserAuthClient is the client API for UserAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserAuthClient interface {
	// 通过本地认证
	AuthLocal(ctx context.Context, in *AuthLocalRequest, opts ...grpc.CallOption) (*PayloadToken, error)
	// 通过微信h5登录认证
	AuthWxH5(ctx context.Context, in *AuthWxH5Request, opts ...grpc.CallOption) (*PayloadToken, error)
	// 登录游戏
	SignInGame(ctx context.Context, in *SignInGameRequest, opts ...grpc.CallOption) (*UserInfo, error)
	// 验证token
	VerifyToken(ctx context.Context, in *VerifyTokenRequest, opts ...grpc.CallOption) (*PayloadToken, error)
	// 申请实名认证
	RealNameCertification(ctx context.Context, in *RealNameCertificationRequest, opts ...grpc.CallOption) (*RealNameCertificationResponse, error)
	// 申请手机认证
	PhoneCertification(ctx context.Context, in *PhoneCertificationRequest, opts ...grpc.CallOption) (*PhoneCertificationResponse, error)
}

type userAuthClient struct {
	cc *grpc.ClientConn
}

func NewUserAuthClient(cc *grpc.ClientConn) UserAuthClient {
	return &userAuthClient{cc}
}

func (c *userAuthClient) AuthLocal(ctx context.Context, in *AuthLocalRequest, opts ...grpc.CallOption) (*PayloadToken, error) {
	out := new(PayloadToken)
	err := c.cc.Invoke(ctx, "/UserAuth/AuthLocal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthClient) AuthWxH5(ctx context.Context, in *AuthWxH5Request, opts ...grpc.CallOption) (*PayloadToken, error) {
	out := new(PayloadToken)
	err := c.cc.Invoke(ctx, "/UserAuth/AuthWxH5", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthClient) SignInGame(ctx context.Context, in *SignInGameRequest, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/UserAuth/SignInGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthClient) VerifyToken(ctx context.Context, in *VerifyTokenRequest, opts ...grpc.CallOption) (*PayloadToken, error) {
	out := new(PayloadToken)
	err := c.cc.Invoke(ctx, "/UserAuth/VerifyToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthClient) RealNameCertification(ctx context.Context, in *RealNameCertificationRequest, opts ...grpc.CallOption) (*RealNameCertificationResponse, error) {
	out := new(RealNameCertificationResponse)
	err := c.cc.Invoke(ctx, "/UserAuth/RealNameCertification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAuthClient) PhoneCertification(ctx context.Context, in *PhoneCertificationRequest, opts ...grpc.CallOption) (*PhoneCertificationResponse, error) {
	out := new(PhoneCertificationResponse)
	err := c.cc.Invoke(ctx, "/UserAuth/PhoneCertification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserAuthServer is the server API for UserAuth service.
type UserAuthServer interface {
	// 通过本地认证
	AuthLocal(context.Context, *AuthLocalRequest) (*PayloadToken, error)
	// 通过微信h5登录认证
	AuthWxH5(context.Context, *AuthWxH5Request) (*PayloadToken, error)
	// 登录游戏
	SignInGame(context.Context, *SignInGameRequest) (*UserInfo, error)
	// 验证token
	VerifyToken(context.Context, *VerifyTokenRequest) (*PayloadToken, error)
	// 申请实名认证
	RealNameCertification(context.Context, *RealNameCertificationRequest) (*RealNameCertificationResponse, error)
	// 申请手机认证
	PhoneCertification(context.Context, *PhoneCertificationRequest) (*PhoneCertificationResponse, error)
}

func RegisterUserAuthServer(s *grpc.Server, srv UserAuthServer) {
	s.RegisterService(&_UserAuth_serviceDesc, srv)
}

func _UserAuth_AuthLocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthLocalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).AuthLocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserAuth/AuthLocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).AuthLocal(ctx, req.(*AuthLocalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuth_AuthWxH5_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthWxH5Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).AuthWxH5(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserAuth/AuthWxH5",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).AuthWxH5(ctx, req.(*AuthWxH5Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuth_SignInGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).SignInGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserAuth/SignInGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).SignInGame(ctx, req.(*SignInGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuth_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserAuth/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).VerifyToken(ctx, req.(*VerifyTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuth_RealNameCertification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealNameCertificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).RealNameCertification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserAuth/RealNameCertification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).RealNameCertification(ctx, req.(*RealNameCertificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAuth_PhoneCertification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneCertificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).PhoneCertification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserAuth/PhoneCertification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).PhoneCertification(ctx, req.(*PhoneCertificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserAuth",
	HandlerType: (*UserAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthLocal",
			Handler:    _UserAuth_AuthLocal_Handler,
		},
		{
			MethodName: "AuthWxH5",
			Handler:    _UserAuth_AuthWxH5_Handler,
		},
		{
			MethodName: "SignInGame",
			Handler:    _UserAuth_SignInGame_Handler,
		},
		{
			MethodName: "VerifyToken",
			Handler:    _UserAuth_VerifyToken_Handler,
		},
		{
			MethodName: "RealNameCertification",
			Handler:    _UserAuth_RealNameCertification_Handler,
		},
		{
			MethodName: "PhoneCertification",
			Handler:    _UserAuth_PhoneCertification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor_user_c69d51f1fe4ac3a8) }

var fileDescriptor_user_c69d51f1fe4ac3a8 = []byte{
	// 930 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0x5f, 0x73, 0xdb, 0x44,
	0x10, 0xb7, 0x1c, 0x3b, 0xb1, 0xd7, 0x49, 0x13, 0x6f, 0x12, 0xe6, 0x50, 0x9b, 0x62, 0x6e, 0x78,
	0x48, 0x61, 0xb8, 0x0e, 0x49, 0x29, 0x0c, 0x6f, 0x49, 0x29, 0xc1, 0x03, 0x63, 0x8a, 0x68, 0x80,
	0xe9, 0x9b, 0x6a, 0x5d, 0x9c, 0x9b, 0x9c, 0x75, 0x8a, 0x74, 0x76, 0xe2, 0x7e, 0x3e, 0x3e, 0x07,
	0xdf, 0x83, 0x37, 0xe6, 0xee, 0x24, 0x5b, 0x8e, 0xff, 0xf4, 0x25, 0x73, 0xbf, 0xdd, 0xd5, 0xfe,
	0xfd, 0xed, 0xc6, 0xb0, 0x3b, 0xca, 0x78, 0xfa, 0xdc, 0xfc, 0x61, 0x49, 0xaa, 0xb4, 0xa2, 0xff,
	0xd4, 0xa0, 0x71, 0x99, 0xf1, 0xb4, 0x1b, 0x5f, 0x29, 0xfc, 0x04, 0x36, 0x8d, 0xaa, 0x1b, 0x11,
	0xaf, 0xe3, 0x1d, 0xd7, 0x83, 0x1c, 0xa1, 0x0f, 0x8d, 0x58, 0xf4, 0x6f, 0x7a, 0xe1, 0x90, 0x93,
	0x6a, 0xc7, 0x3b, 0x6e, 0x06, 0x53, 0x8c, 0x4f, 0x01, 0xae, 0x79, 0x18, 0x75, 0x87, 0x83, 0xcb,
	0x54, 0x92, 0x0d, 0xab, 0x2d, 0x49, 0xb0, 0x03, 0xad, 0xb0, 0xdf, 0x57, 0xa3, 0x58, 0xbf, 0x9d,
	0x24, 0x9c, 0xd4, 0xac, 0xe3, 0xb2, 0xc8, 0x44, 0x1d, 0xf0, 0x38, 0xe2, 0x29, 0xa9, 0xbb, 0xa8,
	0x0e, 0x21, 0x81, 0xad, 0x48, 0x84, 0x43, 0x15, 0x47, 0x64, 0xd3, 0x2a, 0x0a, 0x88, 0x08, 0xb5,
	0x81, 0x92, 0x11, 0xd9, 0xb2, 0x62, 0xfb, 0x36, 0x39, 0xa6, 0x4a, 0x0d, 0x5f, 0x85, 0x69, 0x44,
	0x1a, 0x56, 0x3e, 0xc5, 0xb8, 0x07, 0x1b, 0x63, 0x91, 0x90, 0xa6, 0x15, 0x9b, 0xa7, 0xf1, 0x3d,
	0x16, 0xc9, 0xeb, 0xfb, 0xa4, 0x4f, 0xc0, 0xf9, 0xce, 0xa1, 0xb1, 0x95, 0x63, 0x49, 0x5a, 0xce,
	0x56, 0x8e, 0xa5, 0xb1, 0x95, 0x63, 0x69, 0x6d, 0xb7, 0x9d, 0x6d, 0x0e, 0xf1, 0x0b, 0xd8, 0x78,
	0x1f, 0x0e, 0xc8, 0x4e, 0x67, 0xe3, 0xb8, 0x75, 0x82, 0xac, 0xe8, 0x23, 0x3b, 0x0f, 0x07, 0xaf,
	0x63, 0x9d, 0x4e, 0x02, 0xa3, 0xc6, 0x17, 0x70, 0x98, 0xf2, 0x50, 0x9a, 0x6e, 0xbd, 0xe2, 0xa9,
	0x16, 0x57, 0xa2, 0x1f, 0x6a, 0xa1, 0x62, 0xf2, 0xa8, 0xe3, 0x1d, 0x37, 0x82, 0xe5, 0x4a, 0x64,
	0x80, 0xc9, 0xb5, 0x8a, 0x1f, 0x7c, 0xb2, 0x6b, 0x3f, 0x59, 0xa2, 0xc1, 0x03, 0xa8, 0x5b, 0x29,
	0xd9, 0xb3, 0x23, 0x70, 0xc0, 0x74, 0x4a, 0x44, 0x3d, 0x45, 0xda, 0x56, 0x68, 0xdf, 0xb6, 0x53,
	0x79, 0x48, 0x82, 0x6e, 0x9a, 0x05, 0xf6, 0x5f, 0x42, 0xa3, 0x48, 0xde, 0x74, 0xe2, 0x86, 0x4f,
	0x2c, 0x15, 0x9a, 0x81, 0x79, 0x9a, 0x18, 0xe3, 0x50, 0x8e, 0x1c, 0x09, 0xea, 0x81, 0x03, 0x3f,
	0x54, 0xbf, 0xf7, 0xe8, 0xbf, 0x1e, 0xec, 0x9d, 0x8d, 0xf4, 0xf5, 0xaf, 0xaa, 0x1f, 0xca, 0x80,
	0xdf, 0x8e, 0x78, 0xa6, 0x4b, 0xa3, 0xb7, 0xb1, 0x9c, 0xa3, 0xb2, 0xc8, 0xa4, 0x92, 0x84, 0x59,
	0x76, 0xa7, 0xd2, 0xa8, 0x20, 0x56, 0x81, 0xe7, 0x48, 0xb7, 0xb1, 0x96, 0x74, 0xb5, 0x05, 0xd2,
	0xad, 0xa2, 0xd4, 0x01, 0xd4, 0x45, 0x76, 0xae, 0xb4, 0x25, 0x54, 0x23, 0x70, 0x00, 0x29, 0x6c,
	0x8b, 0x78, 0x2c, 0x34, 0xbf, 0x74, 0xe4, 0x77, 0xb4, 0x9a, 0x93, 0xd1, 0x36, 0xec, 0x9a, 0xfa,
	0xfe, 0xba, 0xff, 0xf9, 0xdb, 0xbc, 0x3c, 0xfa, 0x01, 0xb6, 0xdf, 0x84, 0x13, 0xa9, 0xc2, 0xe8,
	0xad, 0xba, 0xe1, 0x31, 0x3e, 0x82, 0xaa, 0x28, 0x36, 0xa7, 0x2a, 0x22, 0x13, 0x4c, 0x1b, 0x45,
	0x5e, 0x99, 0x03, 0xa6, 0x2c, 0x7e, 0x9f, 0x88, 0x94, 0x9f, 0x69, 0x5b, 0x56, 0x3d, 0x98, 0x62,
	0x33, 0xad, 0x54, 0x49, 0x9e, 0x17, 0x64, 0xdf, 0x2e, 0xe5, 0x1e, 0xbf, 0xb3, 0x95, 0xd8, 0x94,
	0x7b, 0xfc, 0x8e, 0x3e, 0x83, 0xf6, 0x1f, 0x62, 0x10, 0x77, 0xe3, 0x8b, 0x70, 0xc8, 0x8b, 0x7e,
	0x4f, 0x03, 0x7a, 0xa5, 0x80, 0xf4, 0x4b, 0xc0, 0x3f, 0x79, 0x2a, 0xae, 0x26, 0x36, 0xcb, 0xf5,
	0xb6, 0x87, 0xb0, 0x3f, 0x67, 0x9b, 0x25, 0x2a, 0xce, 0x38, 0x65, 0x70, 0x70, 0xc1, 0xf5, 0x8f,
	0x5c, 0x87, 0x42, 0x1a, 0x82, 0x17, 0x4e, 0x56, 0xdc, 0x0b, 0xfa, 0x0b, 0xb4, 0x2f, 0xb8, 0x3e,
	0x93, 0xd2, 0x34, 0xaf, 0x30, 0x46, 0xa8, 0x25, 0xe1, 0x80, 0xe7, 0xa6, 0xf6, 0x6d, 0xb2, 0x90,
	0x62, 0x28, 0x74, 0x41, 0x28, 0x0b, 0x70, 0x1b, 0xbc, 0xdb, 0x7c, 0xe4, 0xde, 0x2d, 0x3d, 0x05,
	0x2c, 0x3b, 0x73, 0x29, 0xe1, 0x11, 0xd4, 0xa4, 0xc8, 0x34, 0xf1, 0xec, 0xee, 0x35, 0xa7, 0xbb,
	0x17, 0x58, 0x31, 0xfd, 0x09, 0x76, 0xcf, 0xa2, 0xa8, 0xab, 0xf9, 0x30, 0xfb, 0x48, 0xb2, 0xf8,
	0x18, 0xea, 0xc2, 0xd8, 0x91, 0xaa, 0x75, 0x55, 0x67, 0xe6, 0xab, 0xc0, 0xc9, 0xe8, 0x3b, 0x00,
	0xe3, 0xf9, 0x32, 0x89, 0x42, 0xcd, 0xf1, 0x73, 0x68, 0x0c, 0xb8, 0xb6, 0x5e, 0xf3, 0xc0, 0xb9,
	0xf5, 0x54, 0x8c, 0xcf, 0x00, 0x46, 0xd3, 0x0f, 0x6c, 0x59, 0x73, 0xd9, 0x95, 0x94, 0xb4, 0x07,
	0x4f, 0x82, 0x65, 0xab, 0x5f, 0x6a, 0x98, 0xdd, 0x5d, 0x6f, 0xc5, 0xee, 0x56, 0xe7, 0x77, 0x97,
	0x7e, 0x06, 0x47, 0x2b, 0xfc, 0xe5, 0x63, 0xfc, 0x06, 0x3e, 0x7d, 0xb3, 0x70, 0x38, 0x4a, 0x84,
	0x70, 0xf7, 0xc3, 0x2b, 0xdd, 0x0f, 0xfa, 0x04, 0xfc, 0x65, 0x9f, 0xe4, 0x0e, 0x5f, 0x40, 0xcd,
	0x54, 0x6d, 0x5a, 0x6b, 0xda, 0x35, 0x6b, 0xad, 0x43, 0xc6, 0xa7, 0xdd, 0xf5, 0x62, 0xbc, 0x16,
	0x9c, 0x4c, 0xa0, 0x69, 0xfa, 0xf1, 0xfb, 0x88, 0xa7, 0x13, 0x3c, 0x85, 0x9d, 0x39, 0x6a, 0xe1,
	0x21, 0x5b, 0x46, 0x35, 0x7f, 0xd6, 0x43, 0x5a, 0xc1, 0xef, 0x00, 0x66, 0x94, 0x40, 0x64, 0x0b,
	0x64, 0xf3, 0xf7, 0xd9, 0x22, 0x67, 0x68, 0xe5, 0xe4, 0x25, 0x6c, 0x19, 0xc9, 0xb9, 0xf8, 0x80,
	0x5f, 0x41, 0xa3, 0x60, 0x08, 0xee, 0xb1, 0x07, 0x64, 0xf1, 0x5b, 0x6c, 0x36, 0x76, 0x5a, 0x39,
	0xf9, 0xaf, 0xea, 0xfe, 0x4b, 0x9a, 0x13, 0x80, 0xcf, 0xa1, 0x39, 0x3d, 0x75, 0xd8, 0x66, 0x0f,
	0xcf, 0x9e, 0xbf, 0xc3, 0xca, 0x67, 0x81, 0x56, 0xf0, 0x6b, 0x68, 0x14, 0xb7, 0xc3, 0x84, 0x9a,
	0x3f, 0x23, 0xcb, 0xcc, 0x61, 0xb6, 0xdb, 0x88, 0x6c, 0x61, 0xd1, 0xe7, 0x9b, 0x71, 0x0a, 0xad,
	0xd2, 0xce, 0xe2, 0x3e, 0x5b, 0xdc, 0xf6, 0xc5, 0x18, 0x7f, 0xc3, 0xe1, 0x52, 0xae, 0xe0, 0x11,
	0x5b, 0xc7, 0x49, 0xff, 0x29, 0x5b, 0x4f, 0xb1, 0x0a, 0xfe, 0x06, 0xb8, 0xc8, 0x18, 0xf4, 0xd9,
	0x4a, 0xe6, 0xf9, 0x8f, 0xd9, 0x1a, 0x8a, 0x55, 0xce, 0x37, 0xdf, 0xd5, 0xcc, 0xd2, 0xbc, 0xdf,
	0xb4, 0x3f, 0x58, 0x4e, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xf9, 0x5c, 0x15, 0xc3, 0x08,
	0x00, 0x00,
}
