// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zlmj/zlmj.proto

package zlmj

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 状态
type State int32

const (
	State_initing     State = 0
	State_cheating    State = 1
	State_can_discard State = 2
	State_over        State = 3
)

var State_name = map[int32]string{
	0: "initing",
	1: "cheating",
	2: "can_discard",
	3: "over",
}
var State_value = map[string]int32{
	"initing":     0,
	"cheating":    1,
	"can_discard": 2,
	"over":        3,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{0}
}

// 操作码
type ActionId int32

const (
	ActionId_pass        ActionId = 0
	ActionId_chi         ActionId = 1
	ActionId_peng        ActionId = 2
	ActionId_gang        ActionId = 3
	ActionId_an_gang     ActionId = 4
	ActionId_guolu_gang  ActionId = 5
	ActionId_ting        ActionId = 6
	ActionId_xi_gang     ActionId = 7
	ActionId_yaojiu_gang ActionId = 8
)

var ActionId_name = map[int32]string{
	0: "pass",
	1: "chi",
	2: "peng",
	3: "gang",
	4: "an_gang",
	5: "guolu_gang",
	6: "ting",
	7: "xi_gang",
	8: "yaojiu_gang",
}
var ActionId_value = map[string]int32{
	"pass":        0,
	"chi":         1,
	"peng":        2,
	"gang":        3,
	"an_gang":     4,
	"guolu_gang":  5,
	"ting":        6,
	"xi_gang":     7,
	"yaojiu_gang": 8,
}

func (x ActionId) String() string {
	return proto.EnumName(ActionId_name, int32(x))
}
func (ActionId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{1}
}

// 组合码
type CombinationId int32

const (
	CombinationId_c_pass        CombinationId = 0
	CombinationId_c_chi         CombinationId = 1
	CombinationId_c_peng        CombinationId = 2
	CombinationId_c_gang        CombinationId = 3
	CombinationId_c_an_gang     CombinationId = 4
	CombinationId_c_yaojiu_gang CombinationId = 5
)

var CombinationId_name = map[int32]string{
	0: "c_pass",
	1: "c_chi",
	2: "c_peng",
	3: "c_gang",
	4: "c_an_gang",
	5: "c_yaojiu_gang",
}
var CombinationId_value = map[string]int32{
	"c_pass":        0,
	"c_chi":         1,
	"c_peng":        2,
	"c_gang":        3,
	"c_an_gang":     4,
	"c_yaojiu_gang": 5,
}

func (x CombinationId) String() string {
	return proto.EnumName(CombinationId_name, int32(x))
}
func (CombinationId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{2}
}

// 游戏选项
type Option struct {
	Cheat                bool     `protobuf:"varint,1,opt,name=cheat,proto3" json:"cheat,omitempty"`
	XiDingXi             bool     `protobuf:"varint,2,opt,name=xiDingXi,proto3" json:"xiDingXi,omitempty"`
	YaoJiuGang           bool     `protobuf:"varint,3,opt,name=yaoJiuGang,proto3" json:"yaoJiuGang,omitempty"`
	YaoJiuJiaFan         bool     `protobuf:"varint,4,opt,name=yaoJiuJiaFan,proto3" json:"yaoJiuJiaFan,omitempty"`
	QiangTing            bool     `protobuf:"varint,5,opt,name=qiangTing,proto3" json:"qiangTing,omitempty"`
	GuaDaFeng            bool     `protobuf:"varint,6,opt,name=guaDaFeng,proto3" json:"guaDaFeng,omitempty"`
	XiaDaYu              bool     `protobuf:"varint,7,opt,name=xiaDaYu,proto3" json:"xiaDaYu,omitempty"`
	KuaiBao              bool     `protobuf:"varint,8,opt,name=kuaiBao,proto3" json:"kuaiBao,omitempty"`
	BaoGang              bool     `protobuf:"varint,9,opt,name=baoGang,proto3" json:"baoGang,omitempty"`
	QiDui                bool     `protobuf:"varint,10,opt,name=qiDui,proto3" json:"qiDui,omitempty"`
	BeiKaoBei            bool     `protobuf:"varint,11,opt,name=beiKaoBei,proto3" json:"beiKaoBei,omitempty"`
	XiBuGuaFeng          bool     `protobuf:"varint,12,opt,name=xiBuGuaFeng,proto3" json:"xiBuGuaFeng,omitempty"`
	NoChiCha             bool     `protobuf:"varint,13,opt,name=noChiCha,proto3" json:"noChiCha,omitempty"`
	DianPaoFirst         bool     `protobuf:"varint,14,opt,name=dianPaoFirst,proto3" json:"dianPaoFirst,omitempty"`
	Ming5An10            bool     `protobuf:"varint,15,opt,name=ming5an10,proto3" json:"ming5an10,omitempty"`
	XiaoFan              bool     `protobuf:"varint,16,opt,name=xiaoFan,proto3" json:"xiaoFan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{0}
}
func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (dst *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(dst, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetCheat() bool {
	if m != nil {
		return m.Cheat
	}
	return false
}

func (m *Option) GetXiDingXi() bool {
	if m != nil {
		return m.XiDingXi
	}
	return false
}

func (m *Option) GetYaoJiuGang() bool {
	if m != nil {
		return m.YaoJiuGang
	}
	return false
}

func (m *Option) GetYaoJiuJiaFan() bool {
	if m != nil {
		return m.YaoJiuJiaFan
	}
	return false
}

func (m *Option) GetQiangTing() bool {
	if m != nil {
		return m.QiangTing
	}
	return false
}

func (m *Option) GetGuaDaFeng() bool {
	if m != nil {
		return m.GuaDaFeng
	}
	return false
}

func (m *Option) GetXiaDaYu() bool {
	if m != nil {
		return m.XiaDaYu
	}
	return false
}

func (m *Option) GetKuaiBao() bool {
	if m != nil {
		return m.KuaiBao
	}
	return false
}

func (m *Option) GetBaoGang() bool {
	if m != nil {
		return m.BaoGang
	}
	return false
}

func (m *Option) GetQiDui() bool {
	if m != nil {
		return m.QiDui
	}
	return false
}

func (m *Option) GetBeiKaoBei() bool {
	if m != nil {
		return m.BeiKaoBei
	}
	return false
}

func (m *Option) GetXiBuGuaFeng() bool {
	if m != nil {
		return m.XiBuGuaFeng
	}
	return false
}

func (m *Option) GetNoChiCha() bool {
	if m != nil {
		return m.NoChiCha
	}
	return false
}

func (m *Option) GetDianPaoFirst() bool {
	if m != nil {
		return m.DianPaoFirst
	}
	return false
}

func (m *Option) GetMing5An10() bool {
	if m != nil {
		return m.Ming5An10
	}
	return false
}

func (m *Option) GetXiaoFan() bool {
	if m != nil {
		return m.XiaoFan
	}
	return false
}

// 游戏数据结构
type GameData struct {
	State                State         `protobuf:"varint,1,opt,name=state,proto3,enum=zlmj.State" json:"state,omitempty"`
	Option               *Option       `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	Players              []*PlayerData `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	BackCardCount        int32         `protobuf:"varint,4,opt,name=backCardCount,proto3" json:"backCardCount,omitempty"`
	Cards                []int32       `protobuf:"varint,5,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	LastDisCard          int32         `protobuf:"varint,6,opt,name=lastDisCard,proto3" json:"lastDisCard,omitempty"`
	CurDiscardIndex      int32         `protobuf:"varint,7,opt,name=curDiscardIndex,proto3" json:"curDiscardIndex,omitempty"`
	LastDiscardIndex     int32         `protobuf:"varint,8,opt,name=lastDiscardIndex,proto3" json:"lastDiscardIndex,omitempty"`
	CardCount            int32         `protobuf:"varint,9,opt,name=cardCount,proto3" json:"cardCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GameData) Reset()         { *m = GameData{} }
func (m *GameData) String() string { return proto.CompactTextString(m) }
func (*GameData) ProtoMessage()    {}
func (*GameData) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{1}
}
func (m *GameData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameData.Unmarshal(m, b)
}
func (m *GameData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameData.Marshal(b, m, deterministic)
}
func (dst *GameData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameData.Merge(dst, src)
}
func (m *GameData) XXX_Size() int {
	return xxx_messageInfo_GameData.Size(m)
}
func (m *GameData) XXX_DiscardUnknown() {
	xxx_messageInfo_GameData.DiscardUnknown(m)
}

var xxx_messageInfo_GameData proto.InternalMessageInfo

func (m *GameData) GetState() State {
	if m != nil {
		return m.State
	}
	return State_initing
}

func (m *GameData) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *GameData) GetPlayers() []*PlayerData {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *GameData) GetBackCardCount() int32 {
	if m != nil {
		return m.BackCardCount
	}
	return 0
}

func (m *GameData) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *GameData) GetLastDisCard() int32 {
	if m != nil {
		return m.LastDisCard
	}
	return 0
}

func (m *GameData) GetCurDiscardIndex() int32 {
	if m != nil {
		return m.CurDiscardIndex
	}
	return 0
}

func (m *GameData) GetLastDiscardIndex() int32 {
	if m != nil {
		return m.LastDiscardIndex
	}
	return 0
}

func (m *GameData) GetCardCount() int32 {
	if m != nil {
		return m.CardCount
	}
	return 0
}

// 玩家数据结构
type PlayerData struct {
	UserId               int32     `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Index                int32     `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	HoldsCount           int32     `protobuf:"varint,3,opt,name=holdsCount,proto3" json:"holdsCount,omitempty"`
	Holds                []int32   `protobuf:"varint,4,rep,packed,name=holds,proto3" json:"holds,omitempty"`
	Folds                []int32   `protobuf:"varint,5,rep,packed,name=folds,proto3" json:"folds,omitempty"`
	CanChupai            bool      `protobuf:"varint,6,opt,name=canChupai,proto3" json:"canChupai,omitempty"`
	Score                int32     `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	TotalScore           int32     `protobuf:"varint,8,opt,name=totalScore,proto3" json:"totalScore,omitempty"`
	IsMaster             bool      `protobuf:"varint,9,opt,name=isMaster,proto3" json:"isMaster,omitempty"`
	CurCard              int32     `protobuf:"varint,10,opt,name=curCard,proto3" json:"curCard,omitempty"`
	DisableCards         []int32   `protobuf:"varint,11,rep,packed,name=disableCards,proto3" json:"disableCards,omitempty"`
	IsReportTing         bool      `protobuf:"varint,12,opt,name=isReportTing,proto3" json:"isReportTing,omitempty"`
	Actions              []*Action `protobuf:"bytes,13,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PlayerData) Reset()         { *m = PlayerData{} }
func (m *PlayerData) String() string { return proto.CompactTextString(m) }
func (*PlayerData) ProtoMessage()    {}
func (*PlayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{2}
}
func (m *PlayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerData.Unmarshal(m, b)
}
func (m *PlayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerData.Marshal(b, m, deterministic)
}
func (dst *PlayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerData.Merge(dst, src)
}
func (m *PlayerData) XXX_Size() int {
	return xxx_messageInfo_PlayerData.Size(m)
}
func (m *PlayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerData.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerData proto.InternalMessageInfo

func (m *PlayerData) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PlayerData) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PlayerData) GetHoldsCount() int32 {
	if m != nil {
		return m.HoldsCount
	}
	return 0
}

func (m *PlayerData) GetHolds() []int32 {
	if m != nil {
		return m.Holds
	}
	return nil
}

func (m *PlayerData) GetFolds() []int32 {
	if m != nil {
		return m.Folds
	}
	return nil
}

func (m *PlayerData) GetCanChupai() bool {
	if m != nil {
		return m.CanChupai
	}
	return false
}

func (m *PlayerData) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *PlayerData) GetTotalScore() int32 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *PlayerData) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *PlayerData) GetCurCard() int32 {
	if m != nil {
		return m.CurCard
	}
	return 0
}

func (m *PlayerData) GetDisableCards() []int32 {
	if m != nil {
		return m.DisableCards
	}
	return nil
}

func (m *PlayerData) GetIsReportTing() bool {
	if m != nil {
		return m.IsReportTing
	}
	return false
}

func (m *PlayerData) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

// 玩家操作
type Action struct {
	ActionId             ActionId `protobuf:"varint,1,opt,name=actionId,proto3,enum=zlmj.ActionId" json:"actionId,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	From                 int32    `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	Card                 int32    `protobuf:"varint,4,opt,name=card,proto3" json:"card,omitempty"`
	Cards                []int32  `protobuf:"varint,5,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{3}
}
func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (dst *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(dst, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetActionId() ActionId {
	if m != nil {
		return m.ActionId
	}
	return ActionId_pass
}

func (m *Action) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Action) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Action) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *Action) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 组合
type Combination struct {
	CombinationId        CombinationId `protobuf:"varint,1,opt,name=combinationId,proto3,enum=zlmj.CombinationId" json:"combinationId,omitempty"`
	From                 int32         `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Card                 int32         `protobuf:"varint,3,opt,name=card,proto3" json:"card,omitempty"`
	Cards                []int32       `protobuf:"varint,4,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Combination) Reset()         { *m = Combination{} }
func (m *Combination) String() string { return proto.CompactTextString(m) }
func (*Combination) ProtoMessage()    {}
func (*Combination) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{4}
}
func (m *Combination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Combination.Unmarshal(m, b)
}
func (m *Combination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Combination.Marshal(b, m, deterministic)
}
func (dst *Combination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Combination.Merge(dst, src)
}
func (m *Combination) XXX_Size() int {
	return xxx_messageInfo_Combination.Size(m)
}
func (m *Combination) XXX_DiscardUnknown() {
	xxx_messageInfo_Combination.DiscardUnknown(m)
}

var xxx_messageInfo_Combination proto.InternalMessageInfo

func (m *Combination) GetCombinationId() CombinationId {
	if m != nil {
		return m.CombinationId
	}
	return CombinationId_c_pass
}

func (m *Combination) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Combination) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *Combination) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Req struct {
	// Types that are valid to be assigned to Req:
	//	*Req_DiscardsReq
	//	*Req_WantHoldsReq
	//	*Req_DoActionReq
	//	*Req_PassReq
	Req                  isReq_Req `protobuf_oneof:"req"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{5}
}
func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (dst *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(dst, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

type isReq_Req interface {
	isReq_Req()
}

type Req_DiscardsReq struct {
	DiscardsReq *DiscardsReq `protobuf:"bytes,1,opt,name=discardsReq,proto3,oneof"`
}

type Req_WantHoldsReq struct {
	WantHoldsReq *WantHoldsReq `protobuf:"bytes,2,opt,name=wantHoldsReq,proto3,oneof"`
}

type Req_DoActionReq struct {
	DoActionReq *DoActionReq `protobuf:"bytes,3,opt,name=doActionReq,proto3,oneof"`
}

type Req_PassReq struct {
	PassReq *PassReq `protobuf:"bytes,4,opt,name=passReq,proto3,oneof"`
}

func (*Req_DiscardsReq) isReq_Req() {}

func (*Req_WantHoldsReq) isReq_Req() {}

func (*Req_DoActionReq) isReq_Req() {}

func (*Req_PassReq) isReq_Req() {}

func (m *Req) GetReq() isReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *Req) GetDiscardsReq() *DiscardsReq {
	if x, ok := m.GetReq().(*Req_DiscardsReq); ok {
		return x.DiscardsReq
	}
	return nil
}

func (m *Req) GetWantHoldsReq() *WantHoldsReq {
	if x, ok := m.GetReq().(*Req_WantHoldsReq); ok {
		return x.WantHoldsReq
	}
	return nil
}

func (m *Req) GetDoActionReq() *DoActionReq {
	if x, ok := m.GetReq().(*Req_DoActionReq); ok {
		return x.DoActionReq
	}
	return nil
}

func (m *Req) GetPassReq() *PassReq {
	if x, ok := m.GetReq().(*Req_PassReq); ok {
		return x.PassReq
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Req) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Req_OneofMarshaler, _Req_OneofUnmarshaler, _Req_OneofSizer, []interface{}{
		(*Req_DiscardsReq)(nil),
		(*Req_WantHoldsReq)(nil),
		(*Req_DoActionReq)(nil),
		(*Req_PassReq)(nil),
	}
}

func _Req_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Req)
	// req
	switch x := m.Req.(type) {
	case *Req_DiscardsReq:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DiscardsReq); err != nil {
			return err
		}
	case *Req_WantHoldsReq:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WantHoldsReq); err != nil {
			return err
		}
	case *Req_DoActionReq:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DoActionReq); err != nil {
			return err
		}
	case *Req_PassReq:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PassReq); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Req.Req has unexpected type %T", x)
	}
	return nil
}

func _Req_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Req)
	switch tag {
	case 1: // req.discardsReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DiscardsReq)
		err := b.DecodeMessage(msg)
		m.Req = &Req_DiscardsReq{msg}
		return true, err
	case 2: // req.wantHoldsReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WantHoldsReq)
		err := b.DecodeMessage(msg)
		m.Req = &Req_WantHoldsReq{msg}
		return true, err
	case 3: // req.doActionReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DoActionReq)
		err := b.DecodeMessage(msg)
		m.Req = &Req_DoActionReq{msg}
		return true, err
	case 4: // req.passReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PassReq)
		err := b.DecodeMessage(msg)
		m.Req = &Req_PassReq{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Req_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Req)
	// req
	switch x := m.Req.(type) {
	case *Req_DiscardsReq:
		s := proto.Size(x.DiscardsReq)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Req_WantHoldsReq:
		s := proto.Size(x.WantHoldsReq)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Req_DoActionReq:
		s := proto.Size(x.DoActionReq)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Req_PassReq:
		s := proto.Size(x.PassReq)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Rsp struct {
	// Types that are valid to be assigned to Rsp:
	//	*Rsp_ErrorRsp
	//	*Rsp_DiscardsRsp
	Rsp                  isRsp_Rsp `protobuf_oneof:"rsp"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Rsp) Reset()         { *m = Rsp{} }
func (m *Rsp) String() string { return proto.CompactTextString(m) }
func (*Rsp) ProtoMessage()    {}
func (*Rsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{6}
}
func (m *Rsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rsp.Unmarshal(m, b)
}
func (m *Rsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rsp.Marshal(b, m, deterministic)
}
func (dst *Rsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rsp.Merge(dst, src)
}
func (m *Rsp) XXX_Size() int {
	return xxx_messageInfo_Rsp.Size(m)
}
func (m *Rsp) XXX_DiscardUnknown() {
	xxx_messageInfo_Rsp.DiscardUnknown(m)
}

var xxx_messageInfo_Rsp proto.InternalMessageInfo

type isRsp_Rsp interface {
	isRsp_Rsp()
}

type Rsp_ErrorRsp struct {
	ErrorRsp *ErrorRsp `protobuf:"bytes,1,opt,name=errorRsp,proto3,oneof"`
}

type Rsp_DiscardsRsp struct {
	DiscardsRsp *DiscardsRsp `protobuf:"bytes,2,opt,name=discardsRsp,proto3,oneof"`
}

func (*Rsp_ErrorRsp) isRsp_Rsp() {}

func (*Rsp_DiscardsRsp) isRsp_Rsp() {}

func (m *Rsp) GetRsp() isRsp_Rsp {
	if m != nil {
		return m.Rsp
	}
	return nil
}

func (m *Rsp) GetErrorRsp() *ErrorRsp {
	if x, ok := m.GetRsp().(*Rsp_ErrorRsp); ok {
		return x.ErrorRsp
	}
	return nil
}

func (m *Rsp) GetDiscardsRsp() *DiscardsRsp {
	if x, ok := m.GetRsp().(*Rsp_DiscardsRsp); ok {
		return x.DiscardsRsp
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Rsp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Rsp_OneofMarshaler, _Rsp_OneofUnmarshaler, _Rsp_OneofSizer, []interface{}{
		(*Rsp_ErrorRsp)(nil),
		(*Rsp_DiscardsRsp)(nil),
	}
}

func _Rsp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Rsp)
	// rsp
	switch x := m.Rsp.(type) {
	case *Rsp_ErrorRsp:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ErrorRsp); err != nil {
			return err
		}
	case *Rsp_DiscardsRsp:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DiscardsRsp); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Rsp.Rsp has unexpected type %T", x)
	}
	return nil
}

func _Rsp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Rsp)
	switch tag {
	case 1: // rsp.errorRsp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ErrorRsp)
		err := b.DecodeMessage(msg)
		m.Rsp = &Rsp_ErrorRsp{msg}
		return true, err
	case 2: // rsp.discardsRsp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DiscardsRsp)
		err := b.DecodeMessage(msg)
		m.Rsp = &Rsp_DiscardsRsp{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Rsp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Rsp)
	// rsp
	switch x := m.Rsp.(type) {
	case *Rsp_ErrorRsp:
		s := proto.Size(x.ErrorRsp)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rsp_DiscardsRsp:
		s := proto.Size(x.DiscardsRsp)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Event struct {
	// Types that are valid to be assigned to Event:
	//	*Event_DiscardsEvent
	//	*Event_GameStartEvent
	//	*Event_DealCardsEvent
	//	*Event_ResumeEvent
	//	*Event_DrawCardEvent
	//	*Event_NewActionEvent
	//	*Event_RemoveActionEvent
	//	*Event_DispatchActionEvent
	Event                isEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{7}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Event interface {
	isEvent_Event()
}

type Event_DiscardsEvent struct {
	DiscardsEvent *DiscardsEvent `protobuf:"bytes,1,opt,name=discardsEvent,proto3,oneof"`
}

type Event_GameStartEvent struct {
	GameStartEvent *GameStartEvent `protobuf:"bytes,2,opt,name=gameStartEvent,proto3,oneof"`
}

type Event_DealCardsEvent struct {
	DealCardsEvent *DealCardsEvent `protobuf:"bytes,3,opt,name=dealCardsEvent,proto3,oneof"`
}

type Event_ResumeEvent struct {
	ResumeEvent *ResumeEvent `protobuf:"bytes,4,opt,name=resumeEvent,proto3,oneof"`
}

type Event_DrawCardEvent struct {
	DrawCardEvent *DrawCardEvent `protobuf:"bytes,5,opt,name=drawCardEvent,proto3,oneof"`
}

type Event_NewActionEvent struct {
	NewActionEvent *NewActionEvent `protobuf:"bytes,6,opt,name=newActionEvent,proto3,oneof"`
}

type Event_RemoveActionEvent struct {
	RemoveActionEvent *RemoveActionEvent `protobuf:"bytes,7,opt,name=removeActionEvent,proto3,oneof"`
}

type Event_DispatchActionEvent struct {
	DispatchActionEvent *DispatchActionEvent `protobuf:"bytes,8,opt,name=dispatchActionEvent,proto3,oneof"`
}

func (*Event_DiscardsEvent) isEvent_Event() {}

func (*Event_GameStartEvent) isEvent_Event() {}

func (*Event_DealCardsEvent) isEvent_Event() {}

func (*Event_ResumeEvent) isEvent_Event() {}

func (*Event_DrawCardEvent) isEvent_Event() {}

func (*Event_NewActionEvent) isEvent_Event() {}

func (*Event_RemoveActionEvent) isEvent_Event() {}

func (*Event_DispatchActionEvent) isEvent_Event() {}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event) GetDiscardsEvent() *DiscardsEvent {
	if x, ok := m.GetEvent().(*Event_DiscardsEvent); ok {
		return x.DiscardsEvent
	}
	return nil
}

func (m *Event) GetGameStartEvent() *GameStartEvent {
	if x, ok := m.GetEvent().(*Event_GameStartEvent); ok {
		return x.GameStartEvent
	}
	return nil
}

func (m *Event) GetDealCardsEvent() *DealCardsEvent {
	if x, ok := m.GetEvent().(*Event_DealCardsEvent); ok {
		return x.DealCardsEvent
	}
	return nil
}

func (m *Event) GetResumeEvent() *ResumeEvent {
	if x, ok := m.GetEvent().(*Event_ResumeEvent); ok {
		return x.ResumeEvent
	}
	return nil
}

func (m *Event) GetDrawCardEvent() *DrawCardEvent {
	if x, ok := m.GetEvent().(*Event_DrawCardEvent); ok {
		return x.DrawCardEvent
	}
	return nil
}

func (m *Event) GetNewActionEvent() *NewActionEvent {
	if x, ok := m.GetEvent().(*Event_NewActionEvent); ok {
		return x.NewActionEvent
	}
	return nil
}

func (m *Event) GetRemoveActionEvent() *RemoveActionEvent {
	if x, ok := m.GetEvent().(*Event_RemoveActionEvent); ok {
		return x.RemoveActionEvent
	}
	return nil
}

func (m *Event) GetDispatchActionEvent() *DispatchActionEvent {
	if x, ok := m.GetEvent().(*Event_DispatchActionEvent); ok {
		return x.DispatchActionEvent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_DiscardsEvent)(nil),
		(*Event_GameStartEvent)(nil),
		(*Event_DealCardsEvent)(nil),
		(*Event_ResumeEvent)(nil),
		(*Event_DrawCardEvent)(nil),
		(*Event_NewActionEvent)(nil),
		(*Event_RemoveActionEvent)(nil),
		(*Event_DispatchActionEvent)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// event
	switch x := m.Event.(type) {
	case *Event_DiscardsEvent:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DiscardsEvent); err != nil {
			return err
		}
	case *Event_GameStartEvent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameStartEvent); err != nil {
			return err
		}
	case *Event_DealCardsEvent:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DealCardsEvent); err != nil {
			return err
		}
	case *Event_ResumeEvent:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResumeEvent); err != nil {
			return err
		}
	case *Event_DrawCardEvent:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DrawCardEvent); err != nil {
			return err
		}
	case *Event_NewActionEvent:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NewActionEvent); err != nil {
			return err
		}
	case *Event_RemoveActionEvent:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveActionEvent); err != nil {
			return err
		}
	case *Event_DispatchActionEvent:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DispatchActionEvent); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Event has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // event.discardsEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DiscardsEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_DiscardsEvent{msg}
		return true, err
	case 2: // event.gameStartEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameStartEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_GameStartEvent{msg}
		return true, err
	case 3: // event.dealCardsEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DealCardsEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_DealCardsEvent{msg}
		return true, err
	case 4: // event.resumeEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResumeEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_ResumeEvent{msg}
		return true, err
	case 5: // event.drawCardEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DrawCardEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_DrawCardEvent{msg}
		return true, err
	case 6: // event.newActionEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NewActionEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_NewActionEvent{msg}
		return true, err
	case 7: // event.removeActionEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveActionEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_RemoveActionEvent{msg}
		return true, err
	case 8: // event.dispatchActionEvent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DispatchActionEvent)
		err := b.DecodeMessage(msg)
		m.Event = &Event_DispatchActionEvent{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// event
	switch x := m.Event.(type) {
	case *Event_DiscardsEvent:
		s := proto.Size(x.DiscardsEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_GameStartEvent:
		s := proto.Size(x.GameStartEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DealCardsEvent:
		s := proto.Size(x.DealCardsEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_ResumeEvent:
		s := proto.Size(x.ResumeEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DrawCardEvent:
		s := proto.Size(x.DrawCardEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_NewActionEvent:
		s := proto.Size(x.NewActionEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_RemoveActionEvent:
		s := proto.Size(x.RemoveActionEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_DispatchActionEvent:
		s := proto.Size(x.DispatchActionEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// region 请求
// 替换想要的牌请求
type WantHoldsReq struct {
	Cards                []int32  `protobuf:"varint,1,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WantHoldsReq) Reset()         { *m = WantHoldsReq{} }
func (m *WantHoldsReq) String() string { return proto.CompactTextString(m) }
func (*WantHoldsReq) ProtoMessage()    {}
func (*WantHoldsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{8}
}
func (m *WantHoldsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WantHoldsReq.Unmarshal(m, b)
}
func (m *WantHoldsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WantHoldsReq.Marshal(b, m, deterministic)
}
func (dst *WantHoldsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WantHoldsReq.Merge(dst, src)
}
func (m *WantHoldsReq) XXX_Size() int {
	return xxx_messageInfo_WantHoldsReq.Size(m)
}
func (m *WantHoldsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WantHoldsReq.DiscardUnknown(m)
}

var xxx_messageInfo_WantHoldsReq proto.InternalMessageInfo

func (m *WantHoldsReq) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 出牌请求
type DiscardsReq struct {
	Card                 int32    `protobuf:"varint,1,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardsReq) Reset()         { *m = DiscardsReq{} }
func (m *DiscardsReq) String() string { return proto.CompactTextString(m) }
func (*DiscardsReq) ProtoMessage()    {}
func (*DiscardsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{9}
}
func (m *DiscardsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardsReq.Unmarshal(m, b)
}
func (m *DiscardsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardsReq.Marshal(b, m, deterministic)
}
func (dst *DiscardsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardsReq.Merge(dst, src)
}
func (m *DiscardsReq) XXX_Size() int {
	return xxx_messageInfo_DiscardsReq.Size(m)
}
func (m *DiscardsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardsReq proto.InternalMessageInfo

func (m *DiscardsReq) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

// 做action请求
type DoActionReq struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoActionReq) Reset()         { *m = DoActionReq{} }
func (m *DoActionReq) String() string { return proto.CompactTextString(m) }
func (*DoActionReq) ProtoMessage()    {}
func (*DoActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{10}
}
func (m *DoActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoActionReq.Unmarshal(m, b)
}
func (m *DoActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoActionReq.Marshal(b, m, deterministic)
}
func (dst *DoActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoActionReq.Merge(dst, src)
}
func (m *DoActionReq) XXX_Size() int {
	return xxx_messageInfo_DoActionReq.Size(m)
}
func (m *DoActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DoActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_DoActionReq proto.InternalMessageInfo

func (m *DoActionReq) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 过请求
type PassReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PassReq) Reset()         { *m = PassReq{} }
func (m *PassReq) String() string { return proto.CompactTextString(m) }
func (*PassReq) ProtoMessage()    {}
func (*PassReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{11}
}
func (m *PassReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PassReq.Unmarshal(m, b)
}
func (m *PassReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PassReq.Marshal(b, m, deterministic)
}
func (dst *PassReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PassReq.Merge(dst, src)
}
func (m *PassReq) XXX_Size() int {
	return xxx_messageInfo_PassReq.Size(m)
}
func (m *PassReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PassReq.DiscardUnknown(m)
}

var xxx_messageInfo_PassReq proto.InternalMessageInfo

// region 响应
// 错误响应
type ErrorRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorRsp) Reset()         { *m = ErrorRsp{} }
func (m *ErrorRsp) String() string { return proto.CompactTextString(m) }
func (*ErrorRsp) ProtoMessage()    {}
func (*ErrorRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{12}
}
func (m *ErrorRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorRsp.Unmarshal(m, b)
}
func (m *ErrorRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorRsp.Marshal(b, m, deterministic)
}
func (dst *ErrorRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorRsp.Merge(dst, src)
}
func (m *ErrorRsp) XXX_Size() int {
	return xxx_messageInfo_ErrorRsp.Size(m)
}
func (m *ErrorRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorRsp proto.InternalMessageInfo

// 出牌响应
type DiscardsRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardsRsp) Reset()         { *m = DiscardsRsp{} }
func (m *DiscardsRsp) String() string { return proto.CompactTextString(m) }
func (*DiscardsRsp) ProtoMessage()    {}
func (*DiscardsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{13}
}
func (m *DiscardsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardsRsp.Unmarshal(m, b)
}
func (m *DiscardsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardsRsp.Marshal(b, m, deterministic)
}
func (dst *DiscardsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardsRsp.Merge(dst, src)
}
func (m *DiscardsRsp) XXX_Size() int {
	return xxx_messageInfo_DiscardsRsp.Size(m)
}
func (m *DiscardsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardsRsp proto.InternalMessageInfo

// region 事件
type GameStartEvent struct {
	State                State    `protobuf:"varint,1,opt,name=state,proto3,enum=zlmj.State" json:"state,omitempty"`
	Cards                []int32  `protobuf:"varint,2,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	DrawCount            int32    `protobuf:"varint,3,opt,name=drawCount,proto3" json:"drawCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStartEvent) Reset()         { *m = GameStartEvent{} }
func (m *GameStartEvent) String() string { return proto.CompactTextString(m) }
func (*GameStartEvent) ProtoMessage()    {}
func (*GameStartEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{14}
}
func (m *GameStartEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartEvent.Unmarshal(m, b)
}
func (m *GameStartEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartEvent.Marshal(b, m, deterministic)
}
func (dst *GameStartEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartEvent.Merge(dst, src)
}
func (m *GameStartEvent) XXX_Size() int {
	return xxx_messageInfo_GameStartEvent.Size(m)
}
func (m *GameStartEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartEvent proto.InternalMessageInfo

func (m *GameStartEvent) GetState() State {
	if m != nil {
		return m.State
	}
	return State_initing
}

func (m *GameStartEvent) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *GameStartEvent) GetDrawCount() int32 {
	if m != nil {
		return m.DrawCount
	}
	return 0
}

// 玩家打牌事件
type DiscardsEvent struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Card                 int32    `protobuf:"varint,2,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardsEvent) Reset()         { *m = DiscardsEvent{} }
func (m *DiscardsEvent) String() string { return proto.CompactTextString(m) }
func (*DiscardsEvent) ProtoMessage()    {}
func (*DiscardsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{15}
}
func (m *DiscardsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardsEvent.Unmarshal(m, b)
}
func (m *DiscardsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardsEvent.Marshal(b, m, deterministic)
}
func (dst *DiscardsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardsEvent.Merge(dst, src)
}
func (m *DiscardsEvent) XXX_Size() int {
	return xxx_messageInfo_DiscardsEvent.Size(m)
}
func (m *DiscardsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardsEvent proto.InternalMessageInfo

func (m *DiscardsEvent) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *DiscardsEvent) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

// 发牌事件
type DealCardsEvent struct {
	Players              []*PlayerData `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DealCardsEvent) Reset()         { *m = DealCardsEvent{} }
func (m *DealCardsEvent) String() string { return proto.CompactTextString(m) }
func (*DealCardsEvent) ProtoMessage()    {}
func (*DealCardsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{16}
}
func (m *DealCardsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealCardsEvent.Unmarshal(m, b)
}
func (m *DealCardsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealCardsEvent.Marshal(b, m, deterministic)
}
func (dst *DealCardsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealCardsEvent.Merge(dst, src)
}
func (m *DealCardsEvent) XXX_Size() int {
	return xxx_messageInfo_DealCardsEvent.Size(m)
}
func (m *DealCardsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DealCardsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DealCardsEvent proto.InternalMessageInfo

func (m *DealCardsEvent) GetPlayers() []*PlayerData {
	if m != nil {
		return m.Players
	}
	return nil
}

// 轮到某人打牌事件
type ResumeEvent struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	DiscardLeft          int32    `protobuf:"varint,2,opt,name=discardLeft,proto3" json:"discardLeft,omitempty"`
	IsNewRound           bool     `protobuf:"varint,3,opt,name=isNewRound,proto3" json:"isNewRound,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeEvent) Reset()         { *m = ResumeEvent{} }
func (m *ResumeEvent) String() string { return proto.CompactTextString(m) }
func (*ResumeEvent) ProtoMessage()    {}
func (*ResumeEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{17}
}
func (m *ResumeEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeEvent.Unmarshal(m, b)
}
func (m *ResumeEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeEvent.Marshal(b, m, deterministic)
}
func (dst *ResumeEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeEvent.Merge(dst, src)
}
func (m *ResumeEvent) XXX_Size() int {
	return xxx_messageInfo_ResumeEvent.Size(m)
}
func (m *ResumeEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeEvent proto.InternalMessageInfo

func (m *ResumeEvent) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ResumeEvent) GetDiscardLeft() int32 {
	if m != nil {
		return m.DiscardLeft
	}
	return 0
}

func (m *ResumeEvent) GetIsNewRound() bool {
	if m != nil {
		return m.IsNewRound
	}
	return false
}

// 玩家抓牌事件
type DrawCardEvent struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Card                 int32    `protobuf:"varint,2,opt,name=card,proto3" json:"card,omitempty"`
	Back                 bool     `protobuf:"varint,3,opt,name=back,proto3" json:"back,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrawCardEvent) Reset()         { *m = DrawCardEvent{} }
func (m *DrawCardEvent) String() string { return proto.CompactTextString(m) }
func (*DrawCardEvent) ProtoMessage()    {}
func (*DrawCardEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{18}
}
func (m *DrawCardEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrawCardEvent.Unmarshal(m, b)
}
func (m *DrawCardEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrawCardEvent.Marshal(b, m, deterministic)
}
func (dst *DrawCardEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrawCardEvent.Merge(dst, src)
}
func (m *DrawCardEvent) XXX_Size() int {
	return xxx_messageInfo_DrawCardEvent.Size(m)
}
func (m *DrawCardEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DrawCardEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DrawCardEvent proto.InternalMessageInfo

func (m *DrawCardEvent) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *DrawCardEvent) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *DrawCardEvent) GetBack() bool {
	if m != nil {
		return m.Back
	}
	return false
}

// 玩家有新的操作
type NewActionEvent struct {
	Actions              []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NewActionEvent) Reset()         { *m = NewActionEvent{} }
func (m *NewActionEvent) String() string { return proto.CompactTextString(m) }
func (*NewActionEvent) ProtoMessage()    {}
func (*NewActionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{19}
}
func (m *NewActionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewActionEvent.Unmarshal(m, b)
}
func (m *NewActionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewActionEvent.Marshal(b, m, deterministic)
}
func (dst *NewActionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewActionEvent.Merge(dst, src)
}
func (m *NewActionEvent) XXX_Size() int {
	return xxx_messageInfo_NewActionEvent.Size(m)
}
func (m *NewActionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_NewActionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_NewActionEvent proto.InternalMessageInfo

func (m *NewActionEvent) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

// 取消玩家的action
type RemoveActionEvent struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveActionEvent) Reset()         { *m = RemoveActionEvent{} }
func (m *RemoveActionEvent) String() string { return proto.CompactTextString(m) }
func (*RemoveActionEvent) ProtoMessage()    {}
func (*RemoveActionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{20}
}
func (m *RemoveActionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveActionEvent.Unmarshal(m, b)
}
func (m *RemoveActionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveActionEvent.Marshal(b, m, deterministic)
}
func (dst *RemoveActionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveActionEvent.Merge(dst, src)
}
func (m *RemoveActionEvent) XXX_Size() int {
	return xxx_messageInfo_RemoveActionEvent.Size(m)
}
func (m *RemoveActionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveActionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveActionEvent proto.InternalMessageInfo

// 操作分发事件 即别人做了操作
type DispatchActionEvent struct {
	Action               *Action  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DispatchActionEvent) Reset()         { *m = DispatchActionEvent{} }
func (m *DispatchActionEvent) String() string { return proto.CompactTextString(m) }
func (*DispatchActionEvent) ProtoMessage()    {}
func (*DispatchActionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_zlmj_082bc7efbd7cd07b, []int{21}
}
func (m *DispatchActionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchActionEvent.Unmarshal(m, b)
}
func (m *DispatchActionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchActionEvent.Marshal(b, m, deterministic)
}
func (dst *DispatchActionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchActionEvent.Merge(dst, src)
}
func (m *DispatchActionEvent) XXX_Size() int {
	return xxx_messageInfo_DispatchActionEvent.Size(m)
}
func (m *DispatchActionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchActionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchActionEvent proto.InternalMessageInfo

func (m *DispatchActionEvent) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func init() {
	proto.RegisterType((*Option)(nil), "zlmj.Option")
	proto.RegisterType((*GameData)(nil), "zlmj.GameData")
	proto.RegisterType((*PlayerData)(nil), "zlmj.PlayerData")
	proto.RegisterType((*Action)(nil), "zlmj.Action")
	proto.RegisterType((*Combination)(nil), "zlmj.Combination")
	proto.RegisterType((*Req)(nil), "zlmj.Req")
	proto.RegisterType((*Rsp)(nil), "zlmj.Rsp")
	proto.RegisterType((*Event)(nil), "zlmj.Event")
	proto.RegisterType((*WantHoldsReq)(nil), "zlmj.WantHoldsReq")
	proto.RegisterType((*DiscardsReq)(nil), "zlmj.DiscardsReq")
	proto.RegisterType((*DoActionReq)(nil), "zlmj.DoActionReq")
	proto.RegisterType((*PassReq)(nil), "zlmj.PassReq")
	proto.RegisterType((*ErrorRsp)(nil), "zlmj.ErrorRsp")
	proto.RegisterType((*DiscardsRsp)(nil), "zlmj.DiscardsRsp")
	proto.RegisterType((*GameStartEvent)(nil), "zlmj.GameStartEvent")
	proto.RegisterType((*DiscardsEvent)(nil), "zlmj.DiscardsEvent")
	proto.RegisterType((*DealCardsEvent)(nil), "zlmj.DealCardsEvent")
	proto.RegisterType((*ResumeEvent)(nil), "zlmj.ResumeEvent")
	proto.RegisterType((*DrawCardEvent)(nil), "zlmj.DrawCardEvent")
	proto.RegisterType((*NewActionEvent)(nil), "zlmj.NewActionEvent")
	proto.RegisterType((*RemoveActionEvent)(nil), "zlmj.RemoveActionEvent")
	proto.RegisterType((*DispatchActionEvent)(nil), "zlmj.DispatchActionEvent")
	proto.RegisterEnum("zlmj.State", State_name, State_value)
	proto.RegisterEnum("zlmj.ActionId", ActionId_name, ActionId_value)
	proto.RegisterEnum("zlmj.CombinationId", CombinationId_name, CombinationId_value)
}

func init() { proto.RegisterFile("zlmj/zlmj.proto", fileDescriptor_zlmj_082bc7efbd7cd07b) }

var fileDescriptor_zlmj_082bc7efbd7cd07b = []byte{
	// 1327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xb6, 0xbd, 0x5e, 0xff, 0x9c, 0x8d, 0x1d, 0x67, 0x52, 0xc1, 0x82, 0x2a, 0x94, 0x2e, 0x15,
	0x0a, 0x11, 0x2a, 0x10, 0x54, 0xa9, 0x55, 0x01, 0x89, 0xd8, 0x6d, 0xdc, 0x42, 0x4b, 0x35, 0x45,
	0x02, 0xae, 0xc2, 0x64, 0x3d, 0x5d, 0x4f, 0x6b, 0xef, 0xda, 0xfb, 0x93, 0xa4, 0x5c, 0x71, 0x85,
	0x78, 0x05, 0x1e, 0x8b, 0x1b, 0x6e, 0x79, 0x15, 0x74, 0xce, 0x8c, 0x77, 0x67, 0xd3, 0x14, 0x7a,
	0x13, 0xed, 0xf9, 0xbe, 0x73, 0xe6, 0x7c, 0x73, 0x7e, 0xbc, 0x1b, 0xd8, 0xfe, 0x75, 0xb1, 0x7c,
	0xf1, 0x29, 0xfe, 0xb9, 0xb5, 0x4a, 0x93, 0x3c, 0x61, 0x6d, 0x7c, 0x0e, 0xfe, 0x76, 0xa0, 0xf3,
	0xfd, 0x2a, 0x57, 0x49, 0xcc, 0xae, 0x81, 0x1b, 0xce, 0xa5, 0xc8, 0xfd, 0xe6, 0x5e, 0x73, 0xbf,
	0xc7, 0xb5, 0xc1, 0xde, 0x87, 0xde, 0x85, 0x9a, 0xa8, 0x38, 0xfa, 0x49, 0xf9, 0x2d, 0x22, 0x4a,
	0x9b, 0x7d, 0x00, 0xf0, 0x4a, 0x24, 0x8f, 0x54, 0x71, 0x2c, 0xe2, 0xc8, 0x77, 0x88, 0xb5, 0x10,
	0x16, 0xc0, 0x96, 0xb6, 0x1e, 0x29, 0xf1, 0x40, 0xc4, 0x7e, 0x9b, 0x3c, 0x6a, 0x18, 0xbb, 0x0e,
	0xfd, 0xb5, 0x12, 0x71, 0xf4, 0x83, 0x8a, 0x23, 0xdf, 0x25, 0x87, 0x0a, 0x40, 0x36, 0x2a, 0xc4,
	0x44, 0x3c, 0x90, 0x71, 0xe4, 0x77, 0x34, 0x5b, 0x02, 0xcc, 0x87, 0xee, 0x85, 0x12, 0x13, 0xf1,
	0x73, 0xe1, 0x77, 0x89, 0xdb, 0x98, 0xc8, 0xbc, 0x2c, 0x84, 0x3a, 0x12, 0x89, 0xdf, 0xd3, 0x8c,
	0x31, 0x91, 0x39, 0x15, 0x09, 0x09, 0xee, 0x6b, 0xc6, 0x98, 0x78, 0xff, 0xb5, 0x9a, 0x14, 0xca,
	0x07, 0x7d, 0x7f, 0x32, 0x50, 0xc1, 0xa9, 0x54, 0xdf, 0x8a, 0xe4, 0x48, 0x2a, 0xdf, 0xd3, 0x0a,
	0x4a, 0x80, 0xed, 0x81, 0x77, 0xa1, 0x8e, 0x8a, 0xe3, 0x42, 0x2b, 0xdc, 0x22, 0xde, 0x86, 0xb0,
	0x7e, 0x71, 0x32, 0x9e, 0xab, 0xf1, 0x5c, 0xf8, 0x03, 0x5d, 0xbf, 0x8d, 0x8d, 0xf5, 0x99, 0x29,
	0x11, 0x3f, 0x15, 0xc9, 0x03, 0x95, 0x66, 0xb9, 0x3f, 0xd4, 0xf5, 0xb1, 0x31, 0xcc, 0xbf, 0x54,
	0x71, 0x74, 0x5b, 0xc4, 0x9f, 0x7f, 0xe6, 0x6f, 0xeb, 0xfc, 0x25, 0x60, 0x2a, 0x90, 0x60, 0x71,
	0x47, 0x65, 0x05, 0xd0, 0x0c, 0xfe, 0x6a, 0x41, 0xef, 0x58, 0x2c, 0xe5, 0x44, 0xe4, 0x82, 0xdd,
	0x00, 0x37, 0xcb, 0x45, 0x2e, 0xa9, 0xb5, 0xc3, 0x43, 0xef, 0x16, 0xcd, 0xc1, 0x33, 0x84, 0xb8,
	0x66, 0xd8, 0x4d, 0xe8, 0x24, 0x34, 0x07, 0xd4, 0x65, 0xef, 0x70, 0x4b, 0xfb, 0xe8, 0xd9, 0xe0,
	0x86, 0x63, 0x07, 0xd0, 0x5d, 0x2d, 0xc4, 0x2b, 0x99, 0x66, 0xbe, 0xb3, 0xe7, 0xec, 0x7b, 0x87,
	0x23, 0xed, 0xf6, 0x94, 0x40, 0xcc, 0xc5, 0x37, 0x0e, 0xec, 0x26, 0x0c, 0x4e, 0x45, 0xf8, 0x72,
	0x2c, 0xd2, 0xd9, 0x38, 0x29, 0xe2, 0x9c, 0xda, 0xef, 0xf2, 0x3a, 0x48, 0x53, 0x27, 0xd2, 0x59,
	0xe6, 0xbb, 0x7b, 0xce, 0xbe, 0xcb, 0xb5, 0x81, 0x75, 0x5d, 0x88, 0x2c, 0x9f, 0xa8, 0x0c, 0x3d,
	0xa9, 0xf3, 0x2e, 0xb7, 0x21, 0xb6, 0x0f, 0xdb, 0x61, 0x91, 0x4e, 0x54, 0x86, 0x01, 0x0f, 0xe3,
	0x99, 0xbc, 0xa0, 0x19, 0x70, 0xf9, 0x65, 0x98, 0x1d, 0xc0, 0xc8, 0x04, 0x56, 0xae, 0x3d, 0x72,
	0x7d, 0x0d, 0xc7, 0x6a, 0x87, 0xa5, 0xde, 0x3e, 0x39, 0x55, 0x40, 0xf0, 0x9b, 0x03, 0x50, 0xdd,
	0x94, 0xbd, 0x03, 0x9d, 0x22, 0x93, 0xe9, 0xc3, 0x19, 0x95, 0xd5, 0xe5, 0xc6, 0xc2, 0x2b, 0x29,
	0xca, 0xd2, 0x22, 0x58, 0x1b, 0xb8, 0x2c, 0xf3, 0x64, 0x31, 0xcb, 0xf4, 0xd9, 0x0e, 0x51, 0x16,
	0x82, 0x51, 0x64, 0xf9, 0x6d, 0x5d, 0x08, 0x32, 0x10, 0x7d, 0x4e, 0xa8, 0x29, 0x0f, 0x19, 0x5a,
	0x66, 0x3c, 0x9e, 0x17, 0x2b, 0xa1, 0x36, 0x6b, 0x51, 0x02, 0x18, 0x93, 0x85, 0x49, 0x2a, 0x4d,
	0x41, 0xb4, 0x81, 0xf9, 0xf3, 0x24, 0x17, 0x8b, 0x67, 0x44, 0xe9, 0x02, 0x58, 0x08, 0x0e, 0xaa,
	0xca, 0x1e, 0x8b, 0x2c, 0x97, 0xa9, 0xd9, 0x8c, 0xd2, 0xc6, 0x31, 0x0b, 0x8b, 0x94, 0x5a, 0x01,
	0x14, 0xb8, 0x31, 0xf5, 0x08, 0x67, 0xe2, 0x74, 0x21, 0xc7, 0xd4, 0x45, 0x8f, 0x64, 0xd6, 0x30,
	0xf4, 0x51, 0x19, 0x97, 0xab, 0x24, 0xcd, 0x69, 0xcb, 0xf5, 0x96, 0xd4, 0x30, 0xf6, 0x11, 0x74,
	0x45, 0x88, 0x23, 0x96, 0xf9, 0x03, 0x1a, 0x2c, 0x33, 0x7f, 0xdf, 0x10, 0xc8, 0x37, 0x64, 0xf0,
	0x47, 0x13, 0x3a, 0x1a, 0x63, 0x07, 0xd0, 0xd3, 0xa8, 0x69, 0xc0, 0xf0, 0x70, 0x68, 0xc7, 0x3c,
	0x9c, 0xf1, 0x92, 0x7f, 0x43, 0x4b, 0x18, 0xb4, 0x9f, 0xa7, 0xc9, 0xd2, 0x34, 0x83, 0x9e, 0x11,
	0xc3, 0x86, 0x9b, 0x61, 0xa5, 0xe7, 0xab, 0x67, 0x34, 0xf8, 0xbd, 0x09, 0xde, 0x38, 0x59, 0x9e,
	0xaa, 0x58, 0x90, 0x9e, 0xbb, 0x30, 0x08, 0x2b, 0xb3, 0x14, 0xb5, 0xab, 0x45, 0x8d, 0x6d, 0x8a,
	0xd7, 0x3d, 0x4b, 0x21, 0xad, 0x2b, 0x84, 0x38, 0x57, 0x09, 0x69, 0xdb, 0x42, 0xfe, 0x69, 0x82,
	0xc3, 0xe5, 0x9a, 0xdd, 0x06, 0x6f, 0xa6, 0x87, 0x39, 0xe3, 0x72, 0x4d, 0xe9, 0xbd, 0xc3, 0x1d,
	0x9d, 0x7e, 0x52, 0x11, 0xd3, 0x06, 0xb7, 0xfd, 0xd8, 0x1d, 0xd8, 0x3a, 0x17, 0x71, 0x3e, 0xc5,
	0xc9, 0xc2, 0x38, 0xbd, 0xff, 0x4c, 0xc7, 0xfd, 0x68, 0x31, 0xd3, 0x06, 0xaf, 0x79, 0x52, 0xc2,
	0xc4, 0x74, 0x48, 0xae, 0x49, 0x69, 0x95, 0xb0, 0x22, 0x28, 0x61, 0x65, 0xb2, 0x8f, 0xa1, 0xbb,
	0x12, 0x19, 0xe5, 0x6a, 0x53, 0xc8, 0xc0, 0xfc, 0x88, 0x68, 0x70, 0xda, 0xe0, 0x1b, 0xfe, 0xc8,
	0x05, 0x27, 0x95, 0xeb, 0x60, 0x0d, 0x0e, 0xcf, 0x56, 0xec, 0x13, 0xe8, 0xc9, 0x34, 0x4d, 0x52,
	0x9e, 0xad, 0xcc, 0xed, 0x4c, 0xc7, 0xef, 0x1b, 0x74, 0xda, 0xe0, 0xa5, 0x47, 0xad, 0x1c, 0xd9,
	0xca, 0x5c, 0xeb, 0x72, 0x39, 0x28, 0xc6, 0xf6, 0xa3, 0x94, 0xd9, 0x2a, 0xf8, 0xb3, 0x0d, 0xee,
	0xfd, 0x33, 0x19, 0xe7, 0xec, 0x1e, 0x0c, 0x36, 0x3c, 0x01, 0x26, 0xf5, 0x6e, 0xfd, 0x24, 0xa2,
	0xa6, 0x0d, 0x5e, 0xf7, 0x65, 0x5f, 0xc3, 0x30, 0x12, 0x4b, 0xf9, 0x2c, 0x17, 0x69, 0xae, 0xa3,
	0xb5, 0x8e, 0x6b, 0x3a, 0xfa, 0xb8, 0xc6, 0x4d, 0x1b, 0xfc, 0x92, 0x37, 0xc6, 0xcf, 0xa4, 0x58,
	0x8c, 0xab, 0xec, 0x8e, 0x1d, 0x3f, 0xa9, 0x71, 0x18, 0x5f, 0xf7, 0xc6, 0x22, 0xa4, 0x32, 0x2b,
	0x96, 0x52, 0x07, 0xb7, 0xed, 0x22, 0xf0, 0x8a, 0xc0, 0x22, 0x58, 0x7e, 0x74, 0xe7, 0x54, 0x9c,
	0xe3, 0x41, 0x3a, 0xd0, 0xad, 0xdd, 0xd9, 0xa6, 0xe8, 0xce, 0x36, 0x80, 0x9a, 0x63, 0x79, 0xae,
	0xfb, 0xad, 0xa3, 0x3b, 0xb6, 0xe6, 0x27, 0x35, 0x0e, 0x35, 0xd7, 0xbd, 0xd9, 0x31, 0xec, 0xa4,
	0x72, 0x99, 0x9c, 0x49, 0xfb, 0x88, 0x2e, 0x1d, 0xf1, 0xee, 0x46, 0xf9, 0x25, 0x7a, 0xda, 0xe0,
	0xaf, 0xc7, 0xb0, 0xc7, 0xb0, 0x3b, 0x53, 0xd9, 0x4a, 0xe4, 0xe1, 0xdc, 0x3e, 0xaa, 0x47, 0x47,
	0xbd, 0x57, 0xf6, 0xef, 0xb2, 0xc3, 0xb4, 0xc1, 0xaf, 0x8a, 0x3b, 0xea, 0x82, 0x2b, 0xf1, 0x21,
	0xb8, 0x09, 0x5b, 0xf6, 0x5e, 0x54, 0x6b, 0xd9, 0xb4, 0xd7, 0xf2, 0x06, 0x78, 0xd6, 0xd6, 0x95,
	0xfb, 0xdc, 0xac, 0xf6, 0x39, 0xf8, 0x10, 0x3c, 0x6b, 0x4f, 0xaa, 0x5f, 0xa9, 0xa6, 0xf5, 0x2b,
	0x15, 0xf4, 0xa1, 0x6b, 0x36, 0x23, 0x00, 0xe8, 0x6d, 0x46, 0x3d, 0x18, 0x58, 0xc7, 0x67, 0xab,
	0x20, 0x82, 0x61, 0x7d, 0x98, 0xde, 0xe6, 0xa5, 0x5f, 0x0a, 0x6f, 0xd9, 0x2f, 0xdf, 0xeb, 0xd0,
	0xa7, 0x86, 0x5a, 0x2f, 0xaa, 0x0a, 0x08, 0xee, 0xc2, 0xa0, 0x36, 0xf3, 0x57, 0xab, 0x2e, 0xaf,
	0xdb, 0xb2, 0xae, 0xfb, 0x25, 0x0c, 0xeb, 0x03, 0x6b, 0x7f, 0x4f, 0x34, 0xff, 0xe7, 0x7b, 0x22,
	0x90, 0xe0, 0x59, 0x13, 0xfb, 0x86, 0xb4, 0x7b, 0xe5, 0xd2, 0x7f, 0x27, 0x9f, 0xe7, 0x26, 0xbb,
	0x0d, 0xe1, 0x7b, 0x50, 0x65, 0x4f, 0xe4, 0x39, 0x4f, 0x8a, 0x78, 0xb6, 0xf9, 0x68, 0xad, 0x90,
	0xe0, 0x31, 0x0c, 0x6a, 0xf3, 0xfd, 0xf6, 0xf7, 0x43, 0x0c, 0x3f, 0x6e, 0xcc, 0xa1, 0xf4, 0x1c,
	0xdc, 0x81, 0x61, 0x7d, 0xe0, 0xed, 0x57, 0x5d, 0xf3, 0xbf, 0x5e, 0x75, 0xbb, 0xb0, 0xf3, 0xda,
	0x9c, 0x07, 0xf7, 0x60, 0xf7, 0x8a, 0x89, 0xc5, 0xaf, 0x37, 0x1d, 0x66, 0x7e, 0x9c, 0xea, 0x47,
	0x1a, 0xee, 0xe0, 0x2b, 0x70, 0xa9, 0xfd, 0xcc, 0x83, 0xae, 0x8a, 0x55, 0xae, 0xe2, 0x68, 0xd4,
	0x60, 0x5b, 0xd0, 0xa3, 0x4f, 0x7d, 0xb4, 0x9a, 0x6c, 0x1b, 0xbc, 0x50, 0xc4, 0x27, 0xa6, 0x62,
	0xa3, 0x16, 0xeb, 0x41, 0x3b, 0x39, 0x93, 0xe9, 0xc8, 0x39, 0x38, 0x83, 0xde, 0xe6, 0xd5, 0x8a,
	0x28, 0xfe, 0x46, 0x8f, 0x1a, 0xac, 0x0b, 0x4e, 0x38, 0x57, 0xa3, 0x26, 0x41, 0x32, 0x8e, 0x74,
	0x48, 0x24, 0xe2, 0x68, 0xe4, 0x60, 0x22, 0x11, 0x9f, 0x90, 0xd1, 0x66, 0x43, 0x80, 0xa8, 0x48,
	0x16, 0x85, 0xb6, 0x5d, 0x74, 0xa3, 0xa4, 0x1d, 0x74, 0xbb, 0x50, 0x1a, 0xee, 0xa2, 0x82, 0x57,
	0x22, 0x79, 0xa1, 0x8c, 0x5f, 0xef, 0xe0, 0x17, 0x18, 0xd4, 0xde, 0x9e, 0x0c, 0xa0, 0x13, 0x9e,
	0x98, 0xf4, 0x7d, 0x70, 0xc3, 0x13, 0x2d, 0x40, 0xc3, 0x5a, 0x02, 0x3d, 0x1b, 0x11, 0x03, 0xe8,
	0x87, 0x27, 0x95, 0x8c, 0x1d, 0x18, 0x84, 0x27, 0x76, 0x06, 0xf7, 0xb4, 0x43, 0xff, 0x12, 0x7d,
	0xf1, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xeb, 0xc3, 0xdf, 0x25, 0x0d, 0x00, 0x00,
}
