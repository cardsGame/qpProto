syntax = "proto3";

package zlmj;

// 游戏选项
message Option {
    bool cheat = 1;
}

// 游戏数据结构
message GameData {
    State state = 1;
    Option option = 2;
    repeated PlayerData players = 3;
}

// 玩家数据结构
message PlayerData {
    int32 userId = 1;
    int32 index = 2;
    int32 holdsCount = 3;
    repeated int32 holds = 4;
}

// 状态
enum State {
    initing = 0; // 初始化
    can_discard = 1; // 能出牌
    over = 2; // 游戏结束
}

message Req {
    oneof req {
        DiscardsReq discardsReq = 1;
        WantHoldsReq wantHoldsReq = 2;
    }
}

message Rsp {
    oneof rsp {
        ErrorRsp errorRsp = 1;
        DiscardsRsp discardsRsp = 2;
    }
}

message Event {
    oneof event {
        DiscardsEvent discardsEvent = 1;
        GameStartEvent gameStartEvent = 2;
        DealCardsEvent dealCardsEvent = 3;
        ResumeEvent resumeEvent = 4;
    }
}


// region 请求
// 出牌请求
message WantHoldsReq {
    repeated int32 cards = 1;
}

message DiscardsReq {
    int32 card = 1;
}
// endregion

// region 响应
// 错误响应
message ErrorRsp {

}
// 出牌响应
message DiscardsRsp {
    
}
// endregion

// region 事件
message GameStartEvent {
    State state = 1; // 游戏状态
    repeated int32 cards = 2; // 牌池
    int32 drawCount = 3; // 抓牌数量
}

// 玩家打牌事件
message DiscardsEvent {
    int32 index = 1;
    int32 card = 2;
}

// 发牌事件
message DealCardsEvent {
    repeated PlayerData players = 1;
}

// 轮到某人打牌事件
message ResumeEvent {
    int32 index = 1; // 座位号
    int32 discardLeft = 2; // 打牌剩余时间
    bool isNewRound = 3; // 是否是新的一轮
}
// endregion