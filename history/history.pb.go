// Code generated by protoc-gen-go. DO NOT EDIT.
// source: history/history.proto

package history

import (
	context "context"
	fmt "fmt"
	friendRoom "github.com/cardsGame/qpProto/friendRoom"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 获取用户战绩请求
type GetUserHistoryRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserHistoryRequest) Reset()         { *m = GetUserHistoryRequest{} }
func (m *GetUserHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserHistoryRequest) ProtoMessage()    {}
func (*GetUserHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{0}
}

func (m *GetUserHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserHistoryRequest.Unmarshal(m, b)
}
func (m *GetUserHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetUserHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserHistoryRequest.Merge(m, src)
}
func (m *GetUserHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserHistoryRequest.Size(m)
}
func (m *GetUserHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserHistoryRequest proto.InternalMessageInfo

func (m *GetUserHistoryRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetUserHistoryRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// 获取用户战绩响应
type GetUserHistoryResponse struct {
	// Types that are valid to be assigned to Room:
	//	*GetUserHistoryResponse_FriendRoomData
	Room                 isGetUserHistoryResponse_Room `protobuf_oneof:"room"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetUserHistoryResponse) Reset()         { *m = GetUserHistoryResponse{} }
func (m *GetUserHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserHistoryResponse) ProtoMessage()    {}
func (*GetUserHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{1}
}

func (m *GetUserHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserHistoryResponse.Unmarshal(m, b)
}
func (m *GetUserHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetUserHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserHistoryResponse.Merge(m, src)
}
func (m *GetUserHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserHistoryResponse.Size(m)
}
func (m *GetUserHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserHistoryResponse proto.InternalMessageInfo

type isGetUserHistoryResponse_Room interface {
	isGetUserHistoryResponse_Room()
}

type GetUserHistoryResponse_FriendRoomData struct {
	FriendRoomData *friendRoom.RoomData `protobuf:"bytes,1,opt,name=friendRoomData,proto3,oneof"`
}

func (*GetUserHistoryResponse_FriendRoomData) isGetUserHistoryResponse_Room() {}

func (m *GetUserHistoryResponse) GetRoom() isGetUserHistoryResponse_Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *GetUserHistoryResponse) GetFriendRoomData() *friendRoom.RoomData {
	if x, ok := m.GetRoom().(*GetUserHistoryResponse_FriendRoomData); ok {
		return x.FriendRoomData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetUserHistoryResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetUserHistoryResponse_FriendRoomData)(nil),
	}
}

func init() {
	proto.RegisterType((*GetUserHistoryRequest)(nil), "history.GetUserHistoryRequest")
	proto.RegisterType((*GetUserHistoryResponse)(nil), "history.GetUserHistoryResponse")
}

func init() { proto.RegisterFile("history/history.proto", fileDescriptor_132197fc40cc0614) }

var fileDescriptor_132197fc40cc0614 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcd, 0xc8, 0x2c, 0x2e,
	0xc9, 0x2f, 0xaa, 0xd4, 0x87, 0xd2, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xec, 0x50, 0xae,
	0x94, 0x45, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x72, 0x62, 0x51,
	0x4a, 0xb1, 0x7b, 0x62, 0x6e, 0xaa, 0x7e, 0x61, 0x41, 0x00, 0x48, 0x99, 0x7e, 0x5a, 0x51, 0x66,
	0x6a, 0x5e, 0x4a, 0x50, 0x7e, 0x7e, 0x2e, 0x12, 0x13, 0x62, 0x84, 0x92, 0x23, 0x97, 0xa8, 0x7b,
	0x6a, 0x49, 0x68, 0x71, 0x6a, 0x91, 0x07, 0xc4, 0xac, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x21, 0x2e, 0x96, 0x82, 0xc4, 0xf4, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x30,
	0x5b, 0x48, 0x84, 0x8b, 0x35, 0x27, 0x33, 0x37, 0xb3, 0x44, 0x82, 0x09, 0x2c, 0x08, 0xe1, 0x28,
	0x25, 0x70, 0x89, 0xa1, 0x1b, 0x51, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x64, 0xc7, 0xc5, 0x87,
	0xb0, 0xd0, 0x25, 0xb1, 0x24, 0x11, 0x6c, 0x1a, 0xb7, 0x91, 0x88, 0x1e, 0x92, 0x3b, 0x60, 0x72,
	0x1e, 0x0c, 0x41, 0x68, 0xaa, 0x9d, 0xd8, 0xb8, 0x58, 0x8a, 0xf2, 0xf3, 0x73, 0x8d, 0xe2, 0xb8,
	0xd8, 0xa1, 0x46, 0x0b, 0x05, 0x73, 0xf1, 0x21, 0x59, 0x56, 0x94, 0x5f, 0x29, 0x24, 0xa7, 0x07,
	0x0b, 0x14, 0xac, 0x1e, 0x91, 0x92, 0xc7, 0x29, 0x0f, 0x71, 0xa5, 0x12, 0x43, 0x12, 0x1b, 0x38,
	0x2c, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x52, 0xa5, 0x08, 0x18, 0x67, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HistoryClient is the client API for History service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HistoryClient interface {
	GetUserHistroy(ctx context.Context, in *GetUserHistoryRequest, opts ...grpc.CallOption) (*GetUserHistoryResponse, error)
}

type historyClient struct {
	cc *grpc.ClientConn
}

func NewHistoryClient(cc *grpc.ClientConn) HistoryClient {
	return &historyClient{cc}
}

func (c *historyClient) GetUserHistroy(ctx context.Context, in *GetUserHistoryRequest, opts ...grpc.CallOption) (*GetUserHistoryResponse, error) {
	out := new(GetUserHistoryResponse)
	err := c.cc.Invoke(ctx, "/history.History/GetUserHistroy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HistoryServer is the server API for History service.
type HistoryServer interface {
	GetUserHistroy(context.Context, *GetUserHistoryRequest) (*GetUserHistoryResponse, error)
}

func RegisterHistoryServer(s *grpc.Server, srv HistoryServer) {
	s.RegisterService(&_History_serviceDesc, srv)
}

func _History_GetUserHistroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryServer).GetUserHistroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/history.History/GetUserHistroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryServer).GetUserHistroy(ctx, req.(*GetUserHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _History_serviceDesc = grpc.ServiceDesc{
	ServiceName: "history.History",
	HandlerType: (*HistoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserHistroy",
			Handler:    _History_GetUserHistroy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "history/history.proto",
}
