// Code generated by protoc-gen-go. DO NOT EDIT.
// source: history/history.proto

package history

import (
	context "context"
	fmt "fmt"
	friendRoom "github.com/cardsGame/qpProto/friendRoom"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HistoryType int32

const (
	HistoryType_friend_room HistoryType = 0
)

var HistoryType_name = map[int32]string{
	0: "friend_room",
}

var HistoryType_value = map[string]int32{
	"friend_room": 0,
}

func (x HistoryType) String() string {
	return proto.EnumName(HistoryType_name, int32(x))
}

func (HistoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{0}
}

// 获取用户战绩请求
type GetUserHistoryRequest struct {
	Page                 int32       `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32       `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	T                    HistoryType `protobuf:"varint,3,opt,name=t,proto3,enum=history.HistoryType" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetUserHistoryRequest) Reset()         { *m = GetUserHistoryRequest{} }
func (m *GetUserHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserHistoryRequest) ProtoMessage()    {}
func (*GetUserHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{0}
}

func (m *GetUserHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserHistoryRequest.Unmarshal(m, b)
}
func (m *GetUserHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetUserHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserHistoryRequest.Merge(m, src)
}
func (m *GetUserHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserHistoryRequest.Size(m)
}
func (m *GetUserHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserHistoryRequest proto.InternalMessageInfo

func (m *GetUserHistoryRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetUserHistoryRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetUserHistoryRequest) GetT() HistoryType {
	if m != nil {
		return m.T
	}
	return HistoryType_friend_room
}

// 获取用户战绩响应
type GetUserHistoryResponse struct {
	// Types that are valid to be assigned to Rooms:
	//	*GetUserHistoryResponse_FriendRooms
	Rooms                isGetUserHistoryResponse_Rooms `protobuf_oneof:"rooms"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GetUserHistoryResponse) Reset()         { *m = GetUserHistoryResponse{} }
func (m *GetUserHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserHistoryResponse) ProtoMessage()    {}
func (*GetUserHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{1}
}

func (m *GetUserHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserHistoryResponse.Unmarshal(m, b)
}
func (m *GetUserHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetUserHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserHistoryResponse.Merge(m, src)
}
func (m *GetUserHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserHistoryResponse.Size(m)
}
func (m *GetUserHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserHistoryResponse proto.InternalMessageInfo

type isGetUserHistoryResponse_Rooms interface {
	isGetUserHistoryResponse_Rooms()
}

type GetUserHistoryResponse_FriendRooms struct {
	FriendRooms *friendRoom.RoomData `protobuf:"bytes,1,opt,name=friendRooms,proto3,oneof"`
}

func (*GetUserHistoryResponse_FriendRooms) isGetUserHistoryResponse_Rooms() {}

func (m *GetUserHistoryResponse) GetRooms() isGetUserHistoryResponse_Rooms {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *GetUserHistoryResponse) GetFriendRooms() *friendRoom.RoomData {
	if x, ok := m.GetRooms().(*GetUserHistoryResponse_FriendRooms); ok {
		return x.FriendRooms
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetUserHistoryResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetUserHistoryResponse_FriendRooms)(nil),
	}
}

// 写入战绩请求
type StoreHistoryRequest struct {
	// Types that are valid to be assigned to RoomData:
	//	*StoreHistoryRequest_FriendRoomData
	RoomData             isStoreHistoryRequest_RoomData `protobuf_oneof:"roomData"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StoreHistoryRequest) Reset()         { *m = StoreHistoryRequest{} }
func (m *StoreHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*StoreHistoryRequest) ProtoMessage()    {}
func (*StoreHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{2}
}

func (m *StoreHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreHistoryRequest.Unmarshal(m, b)
}
func (m *StoreHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreHistoryRequest.Marshal(b, m, deterministic)
}
func (m *StoreHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreHistoryRequest.Merge(m, src)
}
func (m *StoreHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_StoreHistoryRequest.Size(m)
}
func (m *StoreHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreHistoryRequest proto.InternalMessageInfo

type isStoreHistoryRequest_RoomData interface {
	isStoreHistoryRequest_RoomData()
}

type StoreHistoryRequest_FriendRoomData struct {
	FriendRoomData *friendRoom.RoomData `protobuf:"bytes,1,opt,name=friendRoomData,proto3,oneof"`
}

func (*StoreHistoryRequest_FriendRoomData) isStoreHistoryRequest_RoomData() {}

func (m *StoreHistoryRequest) GetRoomData() isStoreHistoryRequest_RoomData {
	if m != nil {
		return m.RoomData
	}
	return nil
}

func (m *StoreHistoryRequest) GetFriendRoomData() *friendRoom.RoomData {
	if x, ok := m.GetRoomData().(*StoreHistoryRequest_FriendRoomData); ok {
		return x.FriendRoomData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StoreHistoryRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StoreHistoryRequest_FriendRoomData)(nil),
	}
}

// 写入战绩响应
type StoreHistoryResponse struct {
	HistoryId            string   `protobuf:"bytes,1,opt,name=historyId,proto3" json:"historyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreHistoryResponse) Reset()         { *m = StoreHistoryResponse{} }
func (m *StoreHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*StoreHistoryResponse) ProtoMessage()    {}
func (*StoreHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{3}
}

func (m *StoreHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreHistoryResponse.Unmarshal(m, b)
}
func (m *StoreHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreHistoryResponse.Marshal(b, m, deterministic)
}
func (m *StoreHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreHistoryResponse.Merge(m, src)
}
func (m *StoreHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_StoreHistoryResponse.Size(m)
}
func (m *StoreHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreHistoryResponse proto.InternalMessageInfo

func (m *StoreHistoryResponse) GetHistoryId() string {
	if m != nil {
		return m.HistoryId
	}
	return ""
}

// 增加索引请求
type AddIndexReqeust struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SubKey               string   `protobuf:"bytes,2,opt,name=subKey,proto3" json:"subKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddIndexReqeust) Reset()         { *m = AddIndexReqeust{} }
func (m *AddIndexReqeust) String() string { return proto.CompactTextString(m) }
func (*AddIndexReqeust) ProtoMessage()    {}
func (*AddIndexReqeust) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{4}
}

func (m *AddIndexReqeust) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIndexReqeust.Unmarshal(m, b)
}
func (m *AddIndexReqeust) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIndexReqeust.Marshal(b, m, deterministic)
}
func (m *AddIndexReqeust) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIndexReqeust.Merge(m, src)
}
func (m *AddIndexReqeust) XXX_Size() int {
	return xxx_messageInfo_AddIndexReqeust.Size(m)
}
func (m *AddIndexReqeust) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIndexReqeust.DiscardUnknown(m)
}

var xxx_messageInfo_AddIndexReqeust proto.InternalMessageInfo

func (m *AddIndexReqeust) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddIndexReqeust) GetSubKey() string {
	if m != nil {
		return m.SubKey
	}
	return ""
}

// 增加索引响应
type AddIndexResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddIndexResponse) Reset()         { *m = AddIndexResponse{} }
func (m *AddIndexResponse) String() string { return proto.CompactTextString(m) }
func (*AddIndexResponse) ProtoMessage()    {}
func (*AddIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_132197fc40cc0614, []int{5}
}

func (m *AddIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIndexResponse.Unmarshal(m, b)
}
func (m *AddIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIndexResponse.Marshal(b, m, deterministic)
}
func (m *AddIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIndexResponse.Merge(m, src)
}
func (m *AddIndexResponse) XXX_Size() int {
	return xxx_messageInfo_AddIndexResponse.Size(m)
}
func (m *AddIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddIndexResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("history.HistoryType", HistoryType_name, HistoryType_value)
	proto.RegisterType((*GetUserHistoryRequest)(nil), "history.GetUserHistoryRequest")
	proto.RegisterType((*GetUserHistoryResponse)(nil), "history.GetUserHistoryResponse")
	proto.RegisterType((*StoreHistoryRequest)(nil), "history.StoreHistoryRequest")
	proto.RegisterType((*StoreHistoryResponse)(nil), "history.StoreHistoryResponse")
	proto.RegisterType((*AddIndexReqeust)(nil), "history.AddIndexReqeust")
	proto.RegisterType((*AddIndexResponse)(nil), "history.AddIndexResponse")
}

func init() { proto.RegisterFile("history/history.proto", fileDescriptor_132197fc40cc0614) }

var fileDescriptor_132197fc40cc0614 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xdf, 0x8b, 0xda, 0x40,
	0x10, 0x36, 0xbd, 0x7a, 0x9e, 0x63, 0xf1, 0x64, 0x9b, 0x3b, 0xd2, 0x60, 0xad, 0xec, 0x93, 0xf4,
	0x21, 0x01, 0xdb, 0x07, 0xa1, 0x50, 0x50, 0x0a, 0x2a, 0xa5, 0x50, 0xd6, 0xf6, 0xa9, 0x0f, 0x25,
	0x9a, 0xa9, 0x86, 0x36, 0x6e, 0xdc, 0xdd, 0x40, 0xf3, 0x5f, 0xf7, 0x4f, 0x28, 0x49, 0x36, 0x3f,
	0x0c, 0xca, 0xbd, 0x24, 0x33, 0x3b, 0xdf, 0x7e, 0xf3, 0xcd, 0x37, 0x0b, 0x0f, 0x87, 0x40, 0x2a,
	0x2e, 0x12, 0x57, 0xff, 0x9d, 0x48, 0x70, 0xc5, 0x49, 0x47, 0xa7, 0xf6, 0x6c, 0x1f, 0xa8, 0x43,
	0xbc, 0x75, 0x76, 0x3c, 0x74, 0x77, 0x9e, 0xf0, 0xe5, 0xd2, 0x0b, 0xd1, 0x3d, 0x45, 0x5f, 0x53,
	0x98, 0xfb, 0x4b, 0x04, 0x78, 0xf4, 0x19, 0xe7, 0x61, 0x2d, 0xcc, 0x29, 0x28, 0xc2, 0xc3, 0x12,
	0xd5, 0x77, 0x89, 0x62, 0x95, 0x73, 0x31, 0x3c, 0xc5, 0x28, 0x15, 0x21, 0xf0, 0x3c, 0xf2, 0xf6,
	0x68, 0x19, 0x63, 0x63, 0xd2, 0x66, 0x59, 0x4c, 0x4c, 0x68, 0xff, 0x09, 0xc2, 0x40, 0x59, 0xcf,
	0xb2, 0xc3, 0x3c, 0x21, 0x14, 0x0c, 0x65, 0xdd, 0x8c, 0x8d, 0x49, 0x7f, 0x6a, 0x3a, 0x85, 0x40,
	0xcd, 0xf6, 0x2d, 0x89, 0x90, 0x19, 0x8a, 0xfe, 0x80, 0xc7, 0x66, 0x1b, 0x19, 0xf1, 0xa3, 0x44,
	0x32, 0x83, 0x5e, 0x25, 0x4a, 0x66, 0xed, 0x7a, 0x53, 0xd3, 0xa9, 0x09, 0x4d, 0x3f, 0x9f, 0x3c,
	0xe5, 0xad, 0x5a, 0xac, 0x0e, 0x5d, 0x74, 0xa0, 0x2d, 0xd2, 0x80, 0x7a, 0xf0, 0x72, 0xa3, 0xb8,
	0xc0, 0xc6, 0x04, 0x1f, 0xa1, 0x5f, 0xc1, 0x53, 0x82, 0x27, 0xc8, 0x1b, 0xe8, 0x05, 0xc0, 0x9d,
	0xd0, 0x31, 0x7d, 0x0f, 0xe6, 0x79, 0x0b, 0xad, 0x7e, 0x08, 0x5d, 0x3d, 0xf1, 0xda, 0xcf, 0xe8,
	0xbb, 0xac, 0x3a, 0xa0, 0x1f, 0xe0, 0x7e, 0xee, 0xfb, 0xeb, 0xa3, 0x8f, 0x7f, 0x19, 0x9e, 0x30,
	0x96, 0x8a, 0x0c, 0xe0, 0xe6, 0x37, 0x26, 0x1a, 0x9a, 0x86, 0xe4, 0x11, 0x6e, 0x65, 0xbc, 0xfd,
	0x8c, 0x49, 0xe6, 0x6a, 0x97, 0xe9, 0x8c, 0x12, 0x18, 0x54, 0x97, 0xf3, 0x76, 0x6f, 0x47, 0xd0,
	0xab, 0x19, 0x4b, 0xee, 0x0b, 0xef, 0x7e, 0xa6, 0x42, 0x07, 0xad, 0xe9, 0x3f, 0x03, 0x3a, 0x1a,
	0x40, 0x36, 0xd0, 0x3f, 0xb7, 0x9c, 0x8c, 0xca, 0xed, 0x5c, 0x5c, 0xb9, 0xfd, 0xe6, 0x6a, 0x3d,
	0x6f, 0x4f, 0x5b, 0xe4, 0x0b, 0xbc, 0xa8, 0xfb, 0x40, 0x86, 0xe5, 0x95, 0x0b, 0x1b, 0xb0, 0x5f,
	0x5f, 0xa9, 0x96, 0x74, 0x73, 0xb8, 0x2b, 0x66, 0x24, 0x56, 0x09, 0x6e, 0x78, 0x66, 0xbf, 0xba,
	0x50, 0x29, 0x28, 0xb6, 0xb7, 0xd9, 0x3b, 0x7e, 0xf7, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xb3,
	0x8d, 0x7f, 0x23, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HistoryClient is the client API for History service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HistoryClient interface {
	GetUserHistory(ctx context.Context, in *GetUserHistoryRequest, opts ...grpc.CallOption) (*GetUserHistoryResponse, error)
	// 存储数据 服务端调用
	StoreHistory(ctx context.Context, in *StoreHistoryRequest, opts ...grpc.CallOption) (*StoreHistoryResponse, error)
	// 增加索引 服务端调用
	AddIndex(ctx context.Context, in *AddIndexReqeust, opts ...grpc.CallOption) (*AddIndexResponse, error)
}

type historyClient struct {
	cc *grpc.ClientConn
}

func NewHistoryClient(cc *grpc.ClientConn) HistoryClient {
	return &historyClient{cc}
}

func (c *historyClient) GetUserHistory(ctx context.Context, in *GetUserHistoryRequest, opts ...grpc.CallOption) (*GetUserHistoryResponse, error) {
	out := new(GetUserHistoryResponse)
	err := c.cc.Invoke(ctx, "/history.History/GetUserHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyClient) StoreHistory(ctx context.Context, in *StoreHistoryRequest, opts ...grpc.CallOption) (*StoreHistoryResponse, error) {
	out := new(StoreHistoryResponse)
	err := c.cc.Invoke(ctx, "/history.History/StoreHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *historyClient) AddIndex(ctx context.Context, in *AddIndexReqeust, opts ...grpc.CallOption) (*AddIndexResponse, error) {
	out := new(AddIndexResponse)
	err := c.cc.Invoke(ctx, "/history.History/AddIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HistoryServer is the server API for History service.
type HistoryServer interface {
	GetUserHistory(context.Context, *GetUserHistoryRequest) (*GetUserHistoryResponse, error)
	// 存储数据 服务端调用
	StoreHistory(context.Context, *StoreHistoryRequest) (*StoreHistoryResponse, error)
	// 增加索引 服务端调用
	AddIndex(context.Context, *AddIndexReqeust) (*AddIndexResponse, error)
}

func RegisterHistoryServer(s *grpc.Server, srv HistoryServer) {
	s.RegisterService(&_History_serviceDesc, srv)
}

func _History_GetUserHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryServer).GetUserHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/history.History/GetUserHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryServer).GetUserHistory(ctx, req.(*GetUserHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _History_StoreHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryServer).StoreHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/history.History/StoreHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryServer).StoreHistory(ctx, req.(*StoreHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _History_AddIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddIndexReqeust)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HistoryServer).AddIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/history.History/AddIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HistoryServer).AddIndex(ctx, req.(*AddIndexReqeust))
	}
	return interceptor(ctx, in, info, handler)
}

var _History_serviceDesc = grpc.ServiceDesc{
	ServiceName: "history.History",
	HandlerType: (*HistoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserHistory",
			Handler:    _History_GetUserHistory_Handler,
		},
		{
			MethodName: "StoreHistory",
			Handler:    _History_StoreHistory_Handler,
		},
		{
			MethodName: "AddIndex",
			Handler:    _History_AddIndex_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "history/history.proto",
}
